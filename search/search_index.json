{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u0411\u0430\u0437\u0430 \u0437\u043d\u0430\u043d\u0438\u0439 \u043f\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430\u043c \u0437\u0430\u0434\u0430\u0447 LeetCode","text":"<p>\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 \u0431\u0430\u0437\u0443 \u0437\u043d\u0430\u043d\u0438\u0439 \u043f\u043e \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430\u043c \u0437\u0430\u0434\u0430\u0447 \u043d\u0430 LeetCode! \u042d\u0442\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043c\u043e\u0447\u044c \u0432\u0430\u043c \u043b\u0443\u0447\u0448\u0435 \u043f\u043e\u043d\u044f\u0442\u044c \u0438 \u0440\u0435\u0448\u0430\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u044b. \u041c\u044b \u0441\u043e\u0431\u0440\u0430\u043b\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0445 \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u043c\u043e\u0447\u044c \u0432\u0430\u043c \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u043a \u0440\u0435\u0448\u0435\u043d\u0438\u044e \u0437\u0430\u0434\u0430\u0447.</p>"},{"location":"#_1","title":"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435","text":"<ul> <li>Arrays</li> <li>Strings</li> <li>Hash Tables</li> <li>Two Pointers</li> <li>Sliding Window Fixed Size</li> <li>Sliding Window Dynamic Size</li> </ul>"},{"location":"Arrays/","title":"Arrays","text":""},{"location":"Arrays/#1-283","title":"1. 283. \u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043d\u0443\u043b\u0435\u0439","text":""},{"location":"Arrays/#_1","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code>, \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u0435 \u0432\u0441\u0435 \u043d\u0443\u043b\u0438 \u0432 \u043a\u043e\u043d\u0435\u0446 \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044f \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432. \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u0435\u0441\u0442\u0435.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [0,1,0,3,12]\n\u0412\u044b\u0445\u043e\u0434: [1,3,12,0,0]\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [0]\n\u0412\u044b\u0445\u043e\u0434: [0]\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= nums.length &lt;= 10^4</code> - <code>-2^31 &lt;= nums[i] &lt;= 2^31 - 1</code></p>"},{"location":"Arrays/#_2","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Arrays/#1","title":"1. \u041d\u0430\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u043c","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432 \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0437\u0430\u0442\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0443\u043b\u0438 \u0438 \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u043e\u0431\u0440\u0430\u0442\u043d\u043e.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u2014 \u043e\u0442\u0434\u0435\u043b\u0438\u0442\u044c \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u0430 \u0437\u0430\u0442\u0435\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043d\u0443\u043b\u044f\u043c\u0438.</p> <pre><code>def moveZeroes(nums):\n    result = []\n\n    for num in nums:\n        if num != 0:\n            result.append(num)\n\n    zero_count = len(nums) - len(result)\n    result.extend([0] * zero_count)\n\n    for i in range(len(nums)):\n        nums[i] = result[i]\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0430: \u0441\u0431\u043e\u0440 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432.</p>"},{"location":"Arrays/#2","title":"2. \u041e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u0441 \u0434\u0432\u0443\u043c\u044f \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\u043c\u0438","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0434\u043b\u044f \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u043c \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432 \u043d\u0430\u0447\u0430\u043b\u043e.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432\u043f\u0435\u0440\u0435\u0434, \u0430 \u0437\u0430\u0442\u0435\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0446\u0430 \u043d\u0443\u043b\u044f\u043c\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u043c\u0435\u0441\u0442\u0435.</p> <pre><code>def moveZeroes(nums):\n    last_non_zero_found_at = 0\n\n    for i in range(len(nums)):\n        if nums[i] != 0:\n            nums[last_non_zero_found_at], nums[i] = nums[i], nums[last_non_zero_found_at]\n            last_non_zero_found_at += 1\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u0441 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u043d\u044b\u043c\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c\u0438 \u043e\u0431\u043c\u0435\u043d\u0430.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043d\u0430 \u043c\u0435\u0441\u0442\u0435, \u0431\u0435\u0437 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.</p>"},{"location":"Arrays/#2-169","title":"2. 169. \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0430","text":""},{"location":"Arrays/#_3","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code> \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c <code>n</code>, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u0435\u0435 \u0447\u0435\u043c <code>\u230an/2\u230b</code> \u0440\u0430\u0437. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u0442\u044c, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432\u0441\u0435\u0433\u0434\u0430 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [3,2,3]\n\u0412\u044b\u0445\u043e\u0434: 3\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [2,2,1,1,1,2,2]\n\u0412\u044b\u0445\u043e\u0434: 2\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>n == nums.length</code> - <code>1 &lt;= n &lt;= 5 * 10^4</code> - <code>-10^9 &lt;= nums[i] &lt;= 10^9</code></p>"},{"location":"Arrays/#_4","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Arrays/#1-brute-force","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0442\u043e\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u0435\u0435 <code>\u230an/2\u230b</code> \u0440\u0430\u0437.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0430 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0447\u0430\u0449\u0435 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u044b, \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.</p> <pre><code>def majorityElement(nums):\n    majority_count = len(nums) // 2\n    for num in nums:\n        count = sum(1 for elem in nums if elem == num)\n        if count &gt; majority_count:\n            return num\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u0412\u043d\u0435\u0448\u043d\u0438\u0439 \u0446\u0438\u043a\u043b O(n), \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u043f\u043e\u0434\u0441\u0447\u0435\u0442 O(n).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.</p>"},{"location":"Arrays/#2-hash-map-counting","title":"2. \u041f\u043e\u0434\u0441\u0447\u0435\u0442 \u0441 \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 (Hash Map Counting)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u044e\u0449\u0438\u0439 <code>\u230an/2\u230b</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0425\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0437\u0430 \u043e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434.</p> <pre><code>def majorityElement(nums):\n    counts = {}\n    majority_count = len(nums) // 2\n    for num in nums:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n        if counts[num] &gt; majority_count:\n            return num\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u0441 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c\u0438 \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u044b O(1).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0425\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0434\u043e n \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.</p>"},{"location":"Arrays/#3-sorting","title":"3. \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 (Sorting)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u043e\u0441\u043b\u0435 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0430 \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 <code>\u230an/2\u230b</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0430 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u0435\u0435 \u0447\u0435\u043c \u0432 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0435 \u0441\u043b\u0443\u0447\u0430\u0435\u0432, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u043d \u043e\u043a\u0430\u0436\u0435\u0442\u0441\u044f \u0432 \u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0435.</p> <pre><code>def majorityElement(nums):\n    nums.sort()\n    return nums[len(nums) // 2]\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n log n) - \u0421\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u043e\u0439.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) \u0438\u043b\u0438 O(n) - \u0417\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 (\u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0432 Python \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c O(n)).</p>"},{"location":"Arrays/#4-boyer-moore-voting-algorithm","title":"4. \u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0433\u043e\u043b\u043e\u0441\u043e\u0432\u0430\u043d\u0438\u044f \u0411\u043e\u0439\u0435\u0440\u0430-\u041c\u0443\u0440\u0430 (Boyer-Moore Voting Algorithm)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u0430 \u0438 \u0441\u0447\u0435\u0442\u0447\u0438\u043a, \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u044f \u0441\u0447\u0435\u0442\u0447\u0438\u043a \u0434\u043b\u044f \u0442\u043e\u0433\u043e \u0436\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u044f \u0434\u043b\u044f \u0434\u0440\u0443\u0433\u0438\u0445.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0430 \u0434\u043e\u043c\u0438\u043d\u0438\u0440\u0443\u0435\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \"\u0433\u043e\u043b\u043e\u0441\u043e\u0432\u0430\u043d\u0438\u044f\" \u043e\u043d \u043e\u0441\u0442\u0430\u043d\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u043e\u043c.</p> <pre><code>def majorityElement(nums):\n    count = 0\n    candidate = None\n\n    for num in nums:\n        if count == 0:\n            candidate = num\n        count += (1 if num == candidate else -1)\n\n    return candidate\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.</p>"},{"location":"Arrays/#3-26","title":"3. 26. \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432 \u0438\u0437 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430","text":""},{"location":"Arrays/#_5","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u043e \u043d\u0435\u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code>, \u0443\u0434\u0430\u043b\u0438\u0442\u0435 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b \u043d\u0430 \u043c\u0435\u0441\u0442\u0435 \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043a\u0430\u0436\u0434\u044b\u0439 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e\u044f\u0432\u043b\u044f\u043b\u0441\u044f \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437. \u041e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f. \u0412\u0435\u0440\u043d\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 <code>k</code>.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [1,1,2]\n\u0412\u044b\u0445\u043e\u0434: 2, nums = [1,2,_]\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 k = 2, \u043f\u0435\u0440\u0432\u044b\u0435 \u0434\u0432\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u2014 [1,2].\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [0,0,1,1,1,2,2,3,3,4]\n\u0412\u044b\u0445\u043e\u0434: 5, nums = [0,1,2,3,4,_,_,_,_,_]\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 k = 5, \u043f\u0435\u0440\u0432\u044b\u0435 \u043f\u044f\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u2014 [0,1,2,3,4].\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= nums.length &lt;= 3 * 10^4</code> - <code>-100 &lt;= nums[i] &lt;= 100</code> - \u041c\u0430\u0441\u0441\u0438\u0432 <code>nums</code> \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u043e \u043d\u0435\u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e.</p>"},{"location":"Arrays/#_6","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Arrays/#1_1","title":"1. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0430 \u0437\u0430\u0442\u0435\u043c \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u0438\u0445 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u0432 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432 \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u043e\u0433\u0434\u0430, \u043a\u043e\u0433\u0434\u0430 \u043e\u043d \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e.</p> <pre><code>def removeDuplicates(nums):\n    if not nums:\n        return 0\n\n    unique_nums = [nums[0]]\n\n    for num in nums[1:]:\n        if num != unique_nums[-1]:\n            unique_nums.append(num)\n\n    for i in range(len(unique_nums)):\n        nums[i] = unique_nums[i]\n\n    return len(unique_nums)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438 \u043e\u0434\u0438\u043d \u0434\u043b\u044f \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.</p>"},{"location":"Arrays/#2-two-pointers","title":"2. \u0414\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f (Two Pointers)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f: \u043e\u0434\u0438\u043d \u0434\u043b\u044f \u043f\u0440\u043e\u0445\u043e\u0434\u0430 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443 (<code>i</code>), \u0434\u0440\u0443\u0433\u043e\u0439 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u043b\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 (<code>j</code>).</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0415\u0441\u043b\u0438 \u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0433\u043e, \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u0435\u0433\u043e \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e <code>j</code> \u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c <code>j</code>.</p> <pre><code>def removeDuplicates(nums):\n    if not nums:\n        return 0\n\n    j = 0\n\n    for i in range(1, len(nums)):\n        if nums[i] != nums[j]:\n            j += 1\n            nums[j] = nums[i]\n\n    return j + 1\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u043d\u0430 \u043c\u0435\u0441\u0442\u0435, \u0431\u0435\u0437 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.</p>"},{"location":"Arrays/#4-121","title":"4. 121. \u041b\u0443\u0447\u0448\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u0434\u043b\u044f \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0438 \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0430\u043a\u0446\u0438\u0439","text":""},{"location":"Arrays/#_7","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 <code>prices</code>, \u0433\u0434\u0435 <code>prices[i]</code> \u2014 \u044d\u0442\u043e \u0446\u0435\u043d\u0430 \u0430\u043a\u0446\u0438\u0438 \u0432 i-\u0439 \u0434\u0435\u043d\u044c. \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0438\u0431\u044b\u043b\u044c, \u043a\u0443\u043f\u0438\u0432 \u0430\u043a\u0446\u0438\u044e \u0432 \u043e\u0434\u0438\u043d \u0434\u0435\u043d\u044c \u0438 \u043f\u0440\u043e\u0434\u0430\u0432 \u0435\u0451 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u0434\u0435\u043d\u044c \u0432 \u0431\u0443\u0434\u0443\u0449\u0435\u043c. \u0412\u0435\u0440\u043d\u0438\u0442\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0443\u044e \u043f\u0440\u0438\u0431\u044b\u043b\u044c. \u0415\u0441\u043b\u0438 \u043f\u0440\u0438\u0431\u044b\u043b\u044c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u0435\u0440\u043d\u0438\u0442\u0435 0.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: prices = [7,1,5,3,6,4]\n\u0412\u044b\u0445\u043e\u0434: 5\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041a\u0443\u043f\u0438\u0442\u0435 \u0432 \u0434\u0435\u043d\u044c 2 (\u0446\u0435\u043d\u0430 = 1) \u0438 \u043f\u0440\u043e\u0434\u0430\u0439\u0442\u0435 \u0432 \u0434\u0435\u043d\u044c 5 (\u0446\u0435\u043d\u0430 = 6), \u043f\u0440\u0438\u0431\u044b\u043b\u044c = 6-1 = 5.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: prices = [7,6,4,3,1]\n\u0412\u044b\u0445\u043e\u0434: 0\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0426\u0435\u043d\u044b \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0430\u0434\u0430\u044e\u0442, \u043f\u0440\u0438\u0431\u044b\u043b\u044c \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= prices.length &lt;= 10^5</code> - <code>0 &lt;= prices[i] &lt;= 10^4</code></p>"},{"location":"Arrays/#_8","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Arrays/#1-brute-force_1","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043f\u0430\u0440\u044b \u0434\u043d\u0435\u0439 \u0434\u043b\u044f \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0438 \u043f\u0440\u043e\u0434\u0430\u0436\u0438, \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u044f \u043f\u0440\u0438\u0431\u044b\u043b\u044c \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u0430\u0440\u044b \u0438 \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u043a\u0430\u0436\u0434\u044b\u0439 \u0434\u0435\u043d\u044c \u043a\u0430\u043a \u0434\u0435\u043d\u044c \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0438 \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0434\u0435\u043d\u044c \u043a\u0430\u043a \u0434\u0435\u043d\u044c \u043f\u0440\u043e\u0434\u0430\u0436\u0438, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0440\u0430\u0437\u043d\u0438\u0446\u0443 \u0446\u0435\u043d.</p> <pre><code>def maxProfit(prices):\n    max_profit = 0\n    n = len(prices)\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            profit = prices[j] - prices[i]\n            if profit &gt; max_profit:\n                max_profit = profit\n\n    return max_profit\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u0414\u0432\u0430 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u0446\u0438\u043a\u043b\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u0441\u0435\u0445 \u043f\u0430\u0440 \u0434\u043d\u0435\u0439.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445.</p>"},{"location":"Arrays/#2-one-pass","title":"2. \u041e\u0434\u043d\u043e\u043f\u0440\u043e\u0445\u043e\u0434\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 (One Pass)","text":"<p>\u0418\u0434\u0435\u044f: \u041e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u0435\u043c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0446\u0435\u043d\u0443, \u0432\u0441\u0442\u0440\u0435\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0434\u043d\u044f, \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u0440\u0438\u0431\u044b\u043b\u044c \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0434\u043d\u044f, \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044f \u0441 \u044d\u0442\u043e\u0439 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0446\u0435\u043d\u043e\u0439.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0440\u0438\u0431\u044b\u043b\u044c \u0434\u043e\u0441\u0442\u0438\u0433\u0430\u0435\u0442\u0441\u044f, \u0435\u0441\u043b\u0438 \u043c\u044b \u043f\u043e\u043a\u0443\u043f\u0430\u0435\u043c \u043f\u043e \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0446\u0435\u043d\u0435 \u0438 \u043f\u0440\u043e\u0434\u0430\u0435\u043c \u043f\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0446\u0435\u043d\u0435, \u0435\u0441\u043b\u0438 \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u0430.</p> <pre><code>def maxProfit(prices):\n    max_profit = 0\n    min_price = float('inf')\n\n    for price in prices:\n        if price &lt; min_price:\n            min_price = price\n        profit = price - min_price\n        if profit &gt; max_profit:\n            max_profit = profit\n\n    return max_profit\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443 \u0446\u0435\u043d.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0446\u0435\u043d\u044b \u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u0438\u0431\u044b\u043b\u0438.</p>"},{"location":"Arrays/#5-189","title":"5. 189. \u041f\u043e\u0432\u043e\u0440\u043e\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u0430","text":""},{"location":"Arrays/#_9","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 <code>nums</code>, \u043f\u043e\u0432\u0435\u0440\u043d\u0438\u0442\u0435 \u0435\u0433\u043e \u0432\u043f\u0440\u0430\u0432\u043e \u043d\u0430 <code>k</code> \u0448\u0430\u0433\u043e\u0432. \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u0435\u0441\u0442\u0435.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [1,2,3,4,5,6,7], k = 3\n\u0412\u044b\u0445\u043e\u0434: [5,6,7,1,2,3,4]\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [-1,-100,3,99], k = 2\n\u0412\u044b\u0445\u043e\u0434: [3,99,-1,-100]\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= nums.length &lt;= 10^5</code> - <code>-2^31 &lt;= nums[i] &lt;= 2^31 - 1</code> - <code>0 &lt;= k &lt;= 10^5</code></p>"},{"location":"Arrays/#_10","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Arrays/#1-brute-force_2","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u043e\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0448\u0430\u0433\u0443 <code>k</code> \u0440\u0430\u0437.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041a\u0430\u0436\u0434\u044b\u0439 \u0448\u0430\u0433 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u0442 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432 \u043d\u0430\u0447\u0430\u043b\u043e, \u0441\u0434\u0432\u0438\u0433\u0430\u044f \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0432\u043f\u0440\u0430\u0432\u043e.</p> <pre><code>def rotate(nums, k):\n    n = len(nums)\n    k %= n\n    for _ in range(k):\n        last = nums[-1]\n        for i in range(n-1, 0, -1):\n            nums[i] = nums[i-1]\n        nums[0] = last\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n \u00d7 k) - \u041a\u0430\u0436\u0434\u044b\u0439 \u043f\u043e\u0432\u043e\u0440\u043e\u0442 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 O(n), \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u0435\u0442\u0441\u044f k \u0440\u0430\u0437.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043d\u0430 \u043c\u0435\u0441\u0442\u0435.</p>"},{"location":"Arrays/#2_1","title":"2. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0440\u0430\u0437\u043c\u0435\u0449\u0430\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0432 \u043f\u043e\u0437\u0438\u0446\u0438\u044f\u0445 <code>(i + k) % n</code>, \u0437\u0430\u0442\u0435\u043c \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u043e\u0431\u0440\u0430\u0442\u043d\u043e.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u043e\u0437\u0438\u0446\u0438\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u0432\u043e\u0440\u043e\u0442\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u043e\u0440\u043c\u0443\u043b\u043e\u0439 <code>(i + k) % n</code>.</p> <pre><code>def rotate(nums, k):\n    n = len(nums)\n    k %= n\n    rotated = [0] * n\n    for i in range(n):\n        rotated[(i + k) % n] = nums[i]\n    nums[:] = rotated\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u0434\u043b\u044f \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432.</p>"},{"location":"Arrays/#3-reverse-array","title":"3. \u0420\u0430\u0437\u0432\u043e\u0440\u043e\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 (Reverse Array)","text":"<p>\u0418\u0434\u0435\u044f: \u0420\u0430\u0437\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0432\u0435\u0441\u044c \u043c\u0430\u0441\u0441\u0438\u0432, \u0437\u0430\u0442\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0435 <code>k</code> \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0438 \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044f <code>n-k</code> \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0420\u0430\u0437\u0432\u043e\u0440\u043e\u0442\u044b \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043d\u0430 \u043d\u0443\u0436\u043d\u044b\u0435 \u043f\u043e\u0437\u0438\u0446\u0438\u0438.</p> <pre><code>def rotate(nums, k):\n    n = len(nums)\n    k %= n\n\n    def reverse(start, end):\n        while start &lt; end:\n            nums[start], nums[end] = nums[end], nums[start]\n            start += 1\n            end -= 1\n\n    reverse(0, n - 1)\n    reverse(0, k - 1)\n    reverse(k, n - 1)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0422\u0440\u0438 \u0440\u0430\u0437\u0432\u043e\u0440\u043e\u0442\u0430, \u043a\u0430\u0436\u0434\u044b\u0439 O(n).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043d\u0430 \u043c\u0435\u0441\u0442\u0435.</p>"},{"location":"Arrays/#6-238","title":"6. 238. \u041f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u043a\u0440\u043e\u043c\u0435 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0435\u0431\u044f","text":""},{"location":"Arrays/#_11","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code>, \u0432\u0435\u0440\u043d\u0438\u0442\u0435 \u043c\u0430\u0441\u0441\u0438\u0432 <code>output</code>, \u0433\u0434\u0435 <code>output[i]</code> \u0440\u0430\u0432\u0435\u043d \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044e \u0432\u0441\u0435\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 <code>nums</code>, \u043a\u0440\u043e\u043c\u0435 <code>nums[i]</code>. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0438 \u0434\u043e\u043b\u0436\u043d\u043e \u0438\u043c\u0435\u0442\u044c \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c O(n).</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [1,2,3,4]\n\u0412\u044b\u0445\u043e\u0434: [24,12,8,6]\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [-1,1,0,-3,3]\n\u0412\u044b\u0445\u043e\u0434: [0,0,9,0,0]\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>2 &lt;= nums.length &lt;= 10^5</code> - <code>-30 &lt;= nums[i] &lt;= 30</code> - \u041f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043b\u044e\u0431\u044b\u0445 \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430 \u0438\u043b\u0438 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u0430 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u0432 32-\u0431\u0438\u0442\u043d\u043e\u0435 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e.</p>"},{"location":"Arrays/#_12","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Arrays/#1-brute-force_3","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430, \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044f \u0435\u0433\u043e \u0441\u0430\u043c\u043e\u0433\u043e.</p> <pre><code>def productExceptSelf(nums):\n    length = len(nums)\n    output = [1] * length\n    for i in range(length):\n        prod = 1\n        for j in range(length):\n            if i != j:\n                prod *= nums[j]\n        output[i] = prod\n    return output\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432.</p>"},{"location":"Arrays/#2_2","title":"2. \u041f\u0440\u0435\u0444\u0438\u043a\u0441\u043d\u044b\u0435 \u0438 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043d\u044b\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043d\u044b\u0445 \u0438 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043d\u044b\u0445 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0439, \u0437\u0430\u0442\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u043d\u043e\u0436\u0430\u0435\u043c \u0438\u0445.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u043a\u0440\u043e\u043c\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e, \u2014 \u044d\u0442\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0434\u043e \u0438 \u043f\u043e\u0441\u043b\u0435 \u043d\u0435\u0433\u043e.</p> <pre><code>def productExceptSelf(nums):\n    length = len(nums)\n    prefix = [1] * length\n    suffix = [1] * length\n    output = [1] * length\n\n    for i in range(1, length):\n        prefix[i] = prefix[i - 1] * nums[i - 1]\n\n    for i in range(length - 2, -1, -1):\n        suffix[i] = suffix[i + 1] * nums[i + 1]\n\n    for i in range(length):\n        output[i] = prefix[i] * suffix[i]\n\n    return output\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0422\u0440\u0438 \u043f\u0440\u043e\u0445\u043e\u0434\u0430 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u0434\u043b\u044f \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043e\u0432 \u0438 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043e\u0432.</p>"},{"location":"Arrays/#3","title":"3. \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043d\u043e\u0435 \u0438 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043d\u043e\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043d\u044b\u0445 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0439, \u0430 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043d\u043e\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c \u043d\u0430 \u043b\u0435\u0442\u0443.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0423\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u0432 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u0445, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044f O(1) \u043f\u0430\u043c\u044f\u0442\u044c.</p> <pre><code>def productExceptSelf(nums):\n    length = len(nums)\n    output = [1] * length\n\n    for i in range(1, length):\n        output[i] = output[i - 1] * nums[i - 1]\n\n    suffix_product = 1\n    for i in range(length - 1, -1, -1):\n        output[i] *= suffix_product\n        suffix_product *= nums[i]\n\n    return output\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0430 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u041a\u0440\u043e\u043c\u0435 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u043f\u0430\u043c\u044f\u0442\u044c \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f.</p>"},{"location":"Arrays/#7-122-ii","title":"7. 122. \u041b\u0443\u0447\u0448\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u0434\u043b\u044f \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0438 \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0430\u043a\u0446\u0438\u0439 II","text":""},{"location":"Arrays/#_13","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 <code>prices</code>, \u0433\u0434\u0435 <code>prices[i]</code> \u2014 \u0446\u0435\u043d\u0430 \u0430\u043a\u0446\u0438\u0438 \u0432 i-\u0439 \u0434\u0435\u043d\u044c. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0432\u0435\u0440\u0448\u0430\u0442\u044c \u0441\u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0434\u0435\u043b\u043e\u043a, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0445\u043e\u0442\u0438\u0442\u0435 (\u043f\u043e\u043a\u0443\u043f\u043a\u0430 \u0438 \u043f\u0440\u043e\u0434\u0430\u0436\u0430 \u043e\u0434\u043d\u043e\u0439 \u0430\u043a\u0446\u0438\u0438), \u043d\u043e \u043d\u0435\u043b\u044c\u0437\u044f \u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u043e\u0434\u043d\u043e\u0439 \u0430\u043a\u0446\u0438\u0438 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e. \u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0443\u044e \u043f\u0440\u0438\u0431\u044b\u043b\u044c.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: prices = [7,1,5,3,6,4]\n\u0412\u044b\u0445\u043e\u0434: 7\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u043a\u0443\u043f\u043a\u0430 \u0432 \u0434\u0435\u043d\u044c 2 (\u0446\u0435\u043d\u0430 = 1), \u043f\u0440\u043e\u0434\u0430\u0436\u0430 \u0432 \u0434\u0435\u043d\u044c 3 (\u0446\u0435\u043d\u0430 = 5), \u043f\u0440\u0438\u0431\u044b\u043b\u044c = 4. \u041f\u043e\u043a\u0443\u043f\u043a\u0430 \u0432 \u0434\u0435\u043d\u044c 4 (\u0446\u0435\u043d\u0430 = 3), \u043f\u0440\u043e\u0434\u0430\u0436\u0430 \u0432 \u0434\u0435\u043d\u044c 5 (\u0446\u0435\u043d\u0430 = 6), \u043f\u0440\u0438\u0431\u044b\u043b\u044c = 3. \u0418\u0442\u043e\u0433\u043e 7.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: prices = [1,2,3,4,5]\n\u0412\u044b\u0445\u043e\u0434: 4\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u043a\u0443\u043f\u043a\u0430 \u0432 \u0434\u0435\u043d\u044c 1 (\u0446\u0435\u043d\u0430 = 1), \u043f\u0440\u043e\u0434\u0430\u0436\u0430 \u0432 \u0434\u0435\u043d\u044c 5 (\u0446\u0435\u043d\u0430 = 5), \u043f\u0440\u0438\u0431\u044b\u043b\u044c = 4.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= prices.length &lt;= 3 * 10^5</code> - <code>0 &lt;= prices[i] &lt;= 10^5</code></p>"},{"location":"Arrays/#_14","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Arrays/#1-simple-one-pass","title":"1. \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043e\u0434\u043d\u043e\u043f\u0440\u043e\u0445\u043e\u0434\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 (Simple One Pass)","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u0443\u043c\u043c\u0438\u0440\u0443\u0435\u043c \u0432\u0441\u0435 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0440\u0430\u0437\u043d\u0438\u0446\u044b \u043c\u0435\u0436\u0434\u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0434\u043d\u044f\u043c\u0438, \u0433\u0434\u0435 \u0446\u0435\u043d\u0430 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u0435\u0442.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041a\u0430\u0436\u0434\u0430\u044f \u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0449\u0430\u044f \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u2014 \u044d\u0442\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0434\u043b\u044f \u043f\u0440\u0438\u0431\u044b\u043b\u0438, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0437\u0430\u0445\u0432\u0430\u0442\u0438\u0442\u044c.</p> <pre><code>def maxProfit(prices):\n    total_profit = 0\n\n    for i in range(1, len(prices)):\n        if prices[i] &gt; prices[i - 1]:\n            total_profit += prices[i] - prices[i - 1]\n\n    return total_profit\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u043f\u0440\u0438\u0431\u044b\u043b\u0438.</p>"},{"location":"Arrays/#2-optimal-greedy","title":"2. \u041e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0436\u0430\u0434\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 (Optimal Greedy)","text":"<p>\u0418\u0434\u0435\u044f: \u0422\u043e \u0436\u0435, \u0447\u0442\u043e \u0438 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u0441\u0443\u043c\u043c\u0438\u0440\u0443\u0435\u043c \u0432\u0441\u0435 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0440\u0430\u0437\u043d\u0438\u0446\u044b \u0446\u0435\u043d.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0416\u0430\u0434\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u043c\u0430\u043a\u0441\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u0438\u0431\u044b\u043b\u044c, \u0437\u0430\u0445\u0432\u0430\u0442\u044b\u0432\u0430\u044f \u0432\u0441\u0435 \u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0446\u0435\u043d.</p> <pre><code>def maxProfit(prices):\n    total_profit = 0\n\n    for i in range(1, len(prices)):\n        if prices[i] &gt; prices[i - 1]:\n            total_profit += prices[i] - prices[i - 1]\n\n    return total_profit\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u043f\u0440\u0438\u0431\u044b\u043b\u0438.</p>"},{"location":"Arrays/#8-2348","title":"8. 2348. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0445 \u043d\u0443\u043b\u044f\u043c\u0438","text":""},{"location":"Arrays/#_15","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code>, \u0432\u0435\u0440\u043d\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0445 \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u043d\u0443\u043b\u0435\u0439.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [1,3,0,0,2,0,0,4]\n\u0412\u044b\u0445\u043e\u0434: 6\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u044b [0], [0], [0,0], [0], [0], [0,0] \u0441\u043e\u0441\u0442\u043e\u044f\u0442 \u0438\u0437 \u043d\u0443\u043b\u0435\u0439.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [0,0,0,2,0,0]\n\u0412\u044b\u0445\u043e\u0434: 9\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u044b: \u0442\u0440\u0438 [0], \u0434\u0432\u0430 [0,0], \u043e\u0434\u0438\u043d [0,0,0], \u0442\u0440\u0438 [0].\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= nums.length &lt;= 10^5</code> - <code>-10^9 &lt;= nums[i] &lt;= 10^9</code></p>"},{"location":"Arrays/#_16","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Arrays/#1-brute-force_4","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u044b, \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u0442\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u043d\u0443\u043b\u0435\u0439.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u044b, \u043f\u043e\u043a\u0430 \u043d\u0435 \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u043c \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u043e\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442.</p> <pre><code>def zeroFilledSubarray(nums):\n    count = 0\n\n    for i in range(len(nums)):\n        for j in range(i, len(nums)):\n            if nums[j] == 0:\n                count += 1\n            else:\n                break\n\n    return count\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u044b.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0447\u0435\u0442\u0447\u0438\u043a.</p>"},{"location":"Arrays/#2_3","title":"2. \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043d\u0443\u043b\u0435\u0439, \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u044f \u0434\u043b\u0438\u043d\u0443 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0443\u043b\u0435\u0439.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041a\u0430\u0436\u0434\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0438\u0437 <code>k</code> \u043d\u0443\u043b\u0435\u0439 \u0434\u0430\u0435\u0442 <code>k + (k-1) + ... + 1</code> \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432.</p> <pre><code>def zeroFilledSubarray(nums):\n    count = 0\n    zero_seq_length = 0\n\n    for num in nums:\n        if num == 0:\n            zero_seq_length += 1\n            count += zero_seq_length\n        else:\n            zero_seq_length = 0\n\n    return count\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0447\u0435\u0442\u0447\u0438\u043a\u0438.</p>"},{"location":"Arrays/#9-334","title":"9. 334. \u0412\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u044e\u0449\u0430\u044f \u0442\u0440\u043e\u0439\u043a\u0430","text":""},{"location":"Arrays/#_17","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code>, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043b\u0438 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u044e\u0449\u0430\u044f \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0434\u043b\u0438\u043d\u043e\u0439 3 (\u0442.\u0435. \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442 \u043b\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u044b <code>i &lt; j &lt; k</code> \u0442\u0430\u043a\u0438\u0435, \u0447\u0442\u043e <code>nums[i] &lt; nums[j] &lt; nums[k]</code>). \u0412\u0435\u0440\u043d\u0438\u0442\u0435 <code>true</code>, \u0435\u0441\u043b\u0438 \u0442\u0430\u043a\u0430\u044f \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442, \u0438\u043d\u0430\u0447\u0435 <code>false</code>.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [1,2,3,4,5]\n\u0412\u044b\u0445\u043e\u0434: true\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0422\u0440\u043e\u0439\u043a\u0430 [1,2,3] \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u044e\u0449\u0435\u0439.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [5,4,3,2,1]\n\u0412\u044b\u0445\u043e\u0434: false\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041d\u0435\u0442 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u044e\u0449\u0435\u0439 \u0442\u0440\u043e\u0439\u043a\u0438.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= nums.length &lt;= 5 * 10^5</code> - <code>-2^31 &lt;= nums[i] &lt;= 2^31 - 1</code></p>"},{"location":"Arrays/#_18","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Arrays/#1-brute-force_5","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0442\u0440\u043e\u0439\u043a\u0438 \u043d\u0430 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u044e\u0449\u0438\u0439 \u043f\u043e\u0440\u044f\u0434\u043e\u043a.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0432\u0441\u0435 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 <code>i</code>, <code>j</code>, <code>k</code>, \u0433\u0434\u0435 <code>i &lt; j &lt; k</code>, \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u0435.</p> <pre><code>def increasingTriplet(nums):\n    n = len(nums)\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if nums[i] &lt; nums[j] &lt; nums[k]:\n                    return True\n    return False\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b3) - \u0422\u0440\u0438 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u0446\u0438\u043a\u043b\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u0441\u0435\u0445 \u0442\u0440\u043e\u0435\u043a.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0446\u0438\u043a\u043b\u0430.</p>"},{"location":"Arrays/#2_4","title":"2. \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043b\u0438\u043d\u0435\u0439\u043d\u044b\u0439 \u043f\u0440\u043e\u0445\u043e\u0434 \u0441 \u0432\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438","text":"<p>\u0418\u0434\u0435\u044f: \u041e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u0435\u043c \u043d\u0430\u0438\u043c\u0435\u043d\u044c\u0448\u0438\u0439 \u0438 \u0432\u0442\u043e\u0440\u043e\u0439 \u043f\u043e \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0439\u0442\u0438 \u0442\u0440\u043e\u0439\u043a\u0443.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0415\u0441\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u043e \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0435, \u0442\u043e \u0442\u0440\u043e\u0439\u043a\u0430 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442.</p> <pre><code>def increasingTriplet(nums):\n    first = second = float('inf')\n    for num in nums:\n        if num &lt;= first:\n            first = num\n        elif num &lt;= second:\n            second = num\n        else:\n            return True\n    return False\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u0432\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.</p>"},{"location":"Hash_Tables/","title":"Hash Tables","text":""},{"location":"Hash_Tables/#1-706-","title":"1. 706. \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u044b","text":""},{"location":"Hash_Tables/#_1","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0441 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c\u0438 <code>put</code>, <code>get</code> \u0438 <code>remove</code>. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446.</p> <ul> <li><code>put(key, value)</code>: \u0412\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043b\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u043a\u043b\u044e\u0447\u0443.</li> <li><code>get(key)</code>: \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u043a\u043b\u044e\u0447\u0443 \u0438\u043b\u0438 -1, \u0435\u0441\u043b\u0438 \u043a\u043b\u044e\u0447 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442.</li> <li><code>remove(key)</code>: \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043a\u043b\u044e\u0447 \u0438 \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.</li> </ul> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u0412\u0445\u043e\u0434: [\"MyHashMap\", \"put\", \"put\", \"get\", \"get\", \"put\", \"get\", \"remove\", \"get\"]\n       [[], [1, 1], [2, 2], [1], [3], [2, 1], [2], [2], [2]]\n\u0412\u044b\u0445\u043e\u0434: [null, null, null, 1, -1, null, 1, null, -1]\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435:\nMyHashMap hashMap = new MyHashMap();\nhashMap.put(1, 1); // \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0430: [[1,1]]\nhashMap.put(2, 2); // \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0430: [[1,1], [2,2]]\nhashMap.get(1);    // \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 1\nhashMap.get(3);    // \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 -1 (\u043a\u043b\u044e\u0447 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442)\nhashMap.put(2, 1); // \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0430: [[1,1], [2,1]] (\u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435)\nhashMap.get(2);    // \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 1\nhashMap.remove(2); // \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0430: [[1,1]]\nhashMap.get(2);    // \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 -1 (\u043a\u043b\u044e\u0447 \u0443\u0434\u0430\u043b\u0435\u043d)\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>0 &lt;= key, value &lt;= 10^6</code> - \u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c 10^4 \u0432\u044b\u0437\u043e\u0432\u043e\u0432 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 <code>put</code>, <code>get</code>, <code>remove</code>.</p>"},{"location":"Hash_Tables/#_2","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-chaining-with-lists","title":"1. \u0426\u0435\u043f\u043e\u0447\u043a\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u043f\u0438\u0441\u043a\u043e\u0432 (Chaining with Lists)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u043f\u0438\u0441\u043a\u043e\u0432, \u0433\u0434\u0435 \u043a\u0430\u0436\u0434\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0445\u0440\u0430\u043d\u0438\u0442 \u043f\u0430\u0440\u044b \u043a\u043b\u044e\u0447-\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043a\u043e\u043b\u043b\u0438\u0437\u0438\u0439.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u0430\u044f \u0445\u044d\u0448-\u0444\u0443\u043d\u043a\u0446\u0438\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, <code>key % size</code>) \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0438\u043d\u0434\u0435\u043a\u0441, \u0430 \u0441\u043f\u0438\u0441\u043e\u043a \u0432 \u044d\u0442\u043e\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0435 \u0445\u0440\u0430\u043d\u0438\u0442 \u0432\u0441\u0435 \u043f\u0430\u0440\u044b, \u043f\u043e\u043f\u0430\u0432\u0448\u0438\u0435 \u0432 \u043d\u0435\u0433\u043e \u0438\u0437-\u0437\u0430 \u043a\u043e\u043b\u043b\u0438\u0437\u0438\u0439.</p> <pre><code>class MyHashMap:\n    def __init__(self):\n        self.size = 1000\n        self.table = [[] for _ in range(self.size)]\n\n    def _hash(self, key):\n        return key % self.size\n\n    def put(self, key: int, value: int) -&gt; None:\n        hash_key = self._hash(key)\n        for pair in self.table[hash_key]:\n            if pair[0] == key:\n                pair[1] = value\n                return\n        self.table[hash_key].append([key, value])\n\n    def get(self, key: int) -&gt; int:\n        hash_key = self._hash(key)\n        for pair in self.table[hash_key]:\n            if pair[0] == key:\n                return pair[1]\n        return -1\n\n    def remove(self, key: int) -&gt; None:\n        hash_key = self._hash(key)\n        for i, pair in enumerate(self.table[hash_key]):\n            if pair[0] == key:\n                del self.table[hash_key][i]\n                return\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: - <code>put</code>, <code>get</code>, <code>remove</code>: O(N/K) \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c, \u0433\u0434\u0435 N \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043b\u044e\u0447\u0435\u0439, K \u2014 \u0440\u0430\u0437\u043c\u0435\u0440 \u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u0412 \u0445\u0443\u0434\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 O(N) \u043f\u0440\u0438 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0445 \u043a\u043e\u043b\u043b\u0438\u0437\u0438\u044f\u0445.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(N + K) - N \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0440 \u043a\u043b\u044e\u0447-\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, K \u2014 \u0440\u0430\u0437\u043c\u0435\u0440 \u0442\u0430\u0431\u043b\u0438\u0446\u044b.</p>"},{"location":"Hash_Tables/#2-open-addressing-with-linear-probing","title":"2. \u041e\u0442\u043a\u0440\u044b\u0442\u0430\u044f \u0430\u0434\u0440\u0435\u0441\u0430\u0446\u0438\u044f \u0441 \u043b\u0438\u043d\u0435\u0439\u043d\u044b\u043c \u0437\u043e\u043d\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c (Open Addressing with Linear Probing)","text":"<p>\u0418\u0434\u0435\u044f: \u0425\u0440\u0430\u043d\u0438\u043c \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435, \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u044f \u043a\u043e\u043b\u043b\u0438\u0437\u0438\u0438 \u043f\u043e\u0438\u0441\u043a\u043e\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u0442\u0430.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u0438 \u043a\u043e\u043b\u043b\u0438\u0437\u0438\u0438 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0438\u043d\u0434\u0435\u043a\u0441\u0443, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043c \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0439 \u0441\u043b\u043e\u0442 \u0438\u043b\u0438 \u043d\u0443\u0436\u043d\u044b\u0439 \u043a\u043b\u044e\u0447.</p> <pre><code>class MyHashMap:\n    def __init__(self):\n        self.size = 10000\n        self.table = [(-1, -1)] * self.size\n\n    def _hash(self, key):\n        return key % self.size\n\n    def put(self, key: int, value: int) -&gt; None:\n        index = self._hash(key)\n        while self.table[index] != (-1, -1) and self.table[index][0] != key:\n            index = (index + 1) % self.size\n        self.table[index] = (key, value)\n\n    def get(self, key: int) -&gt; int:\n        index = self._hash(key)\n        while self.table[index] != (-1, -1):\n            if self.table[index][0] == key:\n                return self.table[index][1]\n            index = (index + 1) % self.size\n        return -1\n\n    def remove(self, key: int) -&gt; None:\n        index = self._hash(key)\n        while self.table[index] != (-1, -1):\n            if self.table[index][0] == key:\n                self.table[index] = (-1, -1)\n                return\n            index = (index + 1) % self.size\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: - <code>put</code>, <code>get</code>, <code>remove</code>: O(1) \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c, O(N) \u0432 \u0445\u0443\u0434\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0438\u0437-\u0437\u0430 \u043a\u043b\u0430\u0441\u0442\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u0438.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(K) - K \u2014 \u0440\u0430\u0437\u043c\u0435\u0440 \u0442\u0430\u0431\u043b\u0438\u0446\u044b.</p>"},{"location":"Hash_Tables/#2-1189-balloon","title":"2. 1189. \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043b\u043e\u0432 \"balloon\"","text":""},{"location":"Hash_Tables/#_3","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 <code>text</code>, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u043b\u043e\u0432\u043e \"balloon\" \u0438\u0437 \u0435\u0451 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u041a\u0430\u0436\u0434\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u0430.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: text = \"nlaebolko\"\n\u0412\u044b\u0445\u043e\u0434: 1\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041c\u043e\u0436\u043d\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0434\u043d\u043e \u0441\u043b\u043e\u0432\u043e \"balloon\" (b, a, l, l, o, o, n).\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: text = \"loonbalxballoon\"\n\u0412\u044b\u0445\u043e\u0434: 2\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041c\u043e\u0436\u043d\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0434\u0432\u0430 \u0441\u043b\u043e\u0432\u0430 \"balloon\".\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= text.length &lt;= 10^4</code> - \u0421\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b.</p>"},{"location":"Hash_Tables/#_4","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-frequency-count","title":"1. \u041f\u043e\u0434\u0441\u0447\u0435\u0442 \u0447\u0430\u0441\u0442\u043e\u0442\u044b (Frequency Count)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0447\u0430\u0441\u0442\u043e\u0442\u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043b\u043e\u0432 \"balloon\" \u043f\u043e \u043b\u0438\u043c\u0438\u0442\u0438\u0440\u0443\u044e\u0449\u0438\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0421\u043b\u043e\u0432\u043e \"balloon\" \u0442\u0440\u0435\u0431\u0443\u0435\u0442 1 'b', 1 'a', 2 'l', 2 'o', 1 'n', \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u043e\u0442\u0430 (\u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f 'l' \u0438 'o') \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.</p> <pre><code>def maxNumberOfBalloons(text: str) -&gt; int:\n    freq = {}\n    for char in text:\n        freq[char] = freq.get(char, 0) + 1\n\n    min_instances = float('inf')\n    min_instances = min(min_instances, freq.get('b', 0))\n    min_instances = min(min_instances, freq.get('a', 0))\n    min_instances = min(min_instances, freq.get('l', 0) // 2)\n    min_instances = min(min_instances, freq.get('o', 0) // 2)\n    min_instances = min(min_instances, freq.get('n', 0))\n\n    return min_instances\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - n \u2014 \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438, \u043e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u0447\u0430\u0441\u0442\u043e\u0442.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0445\u0440\u0430\u043d\u0438\u0442 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p>"},{"location":"Hash_Tables/#2-counter-optimal-approach","title":"2. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Counter (Optimal Approach)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c <code>Counter</code> \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u0447\u0430\u0441\u0442\u043e\u0442, \u0447\u0442\u043e \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u043a\u043e\u0434.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0422\u043e \u0436\u0435, \u0447\u0442\u043e \u0438 \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u043f\u043e\u0434\u0445\u043e\u0434\u0435, \u043d\u043e \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Python.</p> <pre><code>from collections import Counter\n\ndef maxNumberOfBalloons(text: str) -&gt; int:\n    freq = Counter(text)\n    b_count = freq['b']\n    a_count = freq['a']\n    l_count = freq['l'] // 2\n    o_count = freq['o'] // 2\n    n_count = freq['n']\n\n    return min(b_count, a_count, l_count, o_count, n_count)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f Counter.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0424\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p>"},{"location":"Hash_Tables/#3-1512","title":"3. 1512. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0445\u043e\u0440\u043e\u0448\u0438\u0445 \u043f\u0430\u0440","text":""},{"location":"Hash_Tables/#_5","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code>, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \"\u0445\u043e\u0440\u043e\u0448\u0438\u0445 \u043f\u0430\u0440\". \u0425\u043e\u0440\u043e\u0448\u0430\u044f \u043f\u0430\u0440\u0430 \u2014 \u044d\u0442\u043e \u043f\u0430\u0440\u0430 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 <code>(i, j)</code>, \u0433\u0434\u0435 <code>nums[i] == nums[j]</code> \u0438 <code>i &lt; j</code>.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [1,2,3,1,1,3]\n\u0412\u044b\u0445\u043e\u0434: 4\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0425\u043e\u0440\u043e\u0448\u0438\u0435 \u043f\u0430\u0440\u044b: (0,3), (0,4), (3,4), (2,5).\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [1,1,1,1]\n\u0412\u044b\u0445\u043e\u0434: 6\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041a\u0430\u0436\u0434\u0430\u044f \u043f\u0430\u0440\u0430 \u0438\u0437 4 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u043f\u0430\u0440\u0443.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= nums.length &lt;= 100</code> - <code>1 &lt;= nums[i] &lt;= 100</code></p>"},{"location":"Hash_Tables/#_6","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-brute-force","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043f\u0430\u0440\u044b \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u0438 \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0442\u0435, \u0433\u0434\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0440\u0430\u0432\u043d\u044b.</p> <p>\u0418\u043dStuart: \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0438\u0437-\u0437\u0430 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u0446\u0438\u043a\u043b\u043e\u0432.</p> <pre><code>def numIdenticalPairs(nums):\n    good_pairs = 0\n    n = len(nums)\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if nums[i] == nums[j]:\n                good_pairs += 1\n\n    return good_pairs\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u0414\u0432\u0430 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u0446\u0438\u043a\u043b\u0430.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0422\u043e\u043b\u044c\u043a\u043e \u0441\u0447\u0435\u0442\u0447\u0438\u043a \u043f\u0430\u0440.</p>"},{"location":"Hash_Tables/#2","title":"2. \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044f","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0447\u0430\u0441\u0442\u043e\u0442\u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u0432\u044b\u0445 \u043f\u0430\u0440 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0432\u0441\u0442\u0440\u0435\u0447\u0438 \u0447\u0438\u0441\u043b\u0430.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0414\u043b\u044f \u0447\u0438\u0441\u043b\u0430 \u0441 \u0447\u0430\u0441\u0442\u043e\u0442\u043e\u0439 <code>k</code> \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u0440 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u043a <code>k * (k-1) / 2</code>, \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u0442\u0435\u043f\u0435\u043d\u043d\u043e.</p> <pre><code>from collections import defaultdict\n\ndef numIdenticalPairs(nums):\n    count = defaultdict(int)\n    good_pairs = 0\n\n    for num in nums:\n        good_pairs += count[num]\n        count[num] += 1\n\n    return good_pairs\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0447\u0430\u0441\u0442\u043e\u0442.</p>"},{"location":"Hash_Tables/#4-205","title":"4. 205. \u0418\u0437\u043e\u043c\u043e\u0440\u0444\u043d\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438","text":""},{"location":"Hash_Tables/#_7","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u044b \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 <code>s</code>  \u0438 <code>t</code>, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043b\u0438 \u043e\u043d\u0438 \u0438\u0437\u043e\u043c\u043e\u0440\u0444\u043d\u044b\u043c\u0438. \u0414\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u0437\u043e\u043c\u043e\u0440\u0444\u043d\u044b, \u0435\u0441\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 <code>s</code> \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c <code>t</code>. \u0412\u0441\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0434\u043e\u043b\u0436\u043d\u044b \u0437\u0430\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u043d\u0430 \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u0441\u0438\u043c\u0432\u043e\u043b, \u0438 \u044d\u0442\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043d\u043e \u043e\u0434\u043d\u043e\u0437\u043d\u0430\u0447\u043d\u044b\u043c.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: s = \"egg\", t = \"add\"\n\u0412\u044b\u0445\u043e\u0434: true\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: 'e' \u2192 'a', 'g' \u2192 'd', \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0437\u043d\u0430\u0447\u043d\u043e\u0435.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: s = \"foo\", t = \"bar\"\n\u0412\u044b\u0445\u043e\u0434: false\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: 'f' \u2192 'b', \u043d\u043e 'o' \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043e\u0434\u043d\u043e\u0437\u043d\u0430\u0447\u043d\u043e.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= s.length &lt;= 5 * 10^4</code> - <code>t.length == s.length</code> - \u0421\u0442\u0440\u043e\u043a\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 ASCII-\u0441\u0438\u043c\u0432\u043e\u043b\u044b.</p>"},{"location":"Hash_Tables/#_8","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-brute-force-mapping","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 \u0441 \u0434\u0432\u0443\u043c\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u044f\u043c\u0438 (Brute Force Mapping)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u0432\u0430 \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 <code>s</code> \u0432 <code>t</code> \u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044f \u0438\u0445 \u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u043d\u043d\u043e\u0441\u0442\u044c.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043a\u0430\u0436\u0434\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e \u0432 \u043e\u0431\u043e\u0438\u0445 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u0445.</p> <pre><code>def isIsomorphic(s: str, t: str) -&gt; bool:\n    if len(s) != len(t):\n        return False\n\n    map_s_to_t = {}\n    map_t_to_s = {}\n\n    for c1, c2 in zip(s, t):\n        if (c1 in map_s_to_t and map_s_to_t[c1] != c2) or (c2 in map_t_to_s and map_t_to_s[c2] != c1):\n            return False\n\n        map_s_to_t[c1] = c2\n        map_t_to_s[c2] = c1\n\n    return True\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u0441\u0442\u0440\u043e\u043a\u0430\u043c.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u0432\u0430 \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439.</p>"},{"location":"Hash_Tables/#2-one-to-one-mapping-with-two-hash-maps","title":"2. \u041e\u0434\u0438\u043d \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u0434\u0432\u0443\u043c\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\u043c\u0438 (One-to-One Mapping with Two Hash Maps)","text":"<p>\u0418\u0434\u0435\u044f: \u0422\u043e \u0436\u0435, \u0447\u0442\u043e \u0438 \u043f\u0435\u0440\u0432\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u043d\u043e \u0441 \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0420\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u043d\u0430 \u0434\u0432\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u0448\u0430\u0433\u0430 \u0434\u043b\u044f \u044f\u0441\u043d\u043e\u0441\u0442\u0438.</p> <pre><code>def isIsomorphic(s: str, t: str) -&gt; bool:\n    if len(s) != len(t):\n        return False\n\n    map_s_to_t, map_t_to_s = {}, {}\n\n    for c1, c2 in zip(s, t):\n        if c1 in map_s_to_t:\n            if map_s_to_t[c1] != c2:\n                return False\n        else:\n            map_s_to_t[c1] = c2\n\n        if c2 in map_t_to_s:\n            if map_t_to_s[c2] != c1:\n                return False\n        else:\n            map_t_to_s[c2] = c1\n\n    return True\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u0441\u0442\u0440\u043e\u043a\u0430\u043c.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u0432\u0430 \u0441\u043b\u043e\u0432\u0430\u0440\u044f.</p>"},{"location":"Hash_Tables/#3-single-hash-map-with-character-encoding","title":"3. \u041a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043e\u0434\u043d\u0438\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u043c (Single Hash Map with Character Encoding)","text":"<p>\u0418\u0434\u0435\u044f: \u041a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043f\u043e \u0438\u0445 \u043f\u0435\u0440\u0432\u043e\u043c\u0443 \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044e \u0432 \u0432\u0438\u0434\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0415\u0441\u043b\u0438 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442, \u0441\u0442\u0440\u043e\u043a\u0438 \u0438\u0437\u043e\u043c\u043e\u0440\u0444\u043d\u044b.</p> <pre><code>def isIsomorphic(s: str, t: str) -&gt; bool:\n    def encode(string):\n        mapping = {}\n        encoded = []\n        for index, char in enumerate(string):\n            if char not in mapping:\n                mapping[char] = index\n            encoded.append(mapping[char])\n        return encoded\n\n    return encode(s) == encode(t)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u0434\u043b\u044f \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0425\u0440\u0430\u043d\u0438\u043c \u0441\u043f\u0438\u0441\u043a\u0438 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</p>"},{"location":"Hash_Tables/#5-383","title":"5. 383. \u0417\u0430\u043f\u0438\u0441\u043a\u0430 \u0441 \u0432\u044b\u043a\u0443\u043f\u043e\u043c","text":""},{"location":"Hash_Tables/#_9","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u044b \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 <code>ransomNote</code> \u0438 <code>magazine</code>. \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u043c\u043e\u0436\u043d\u043e \u043b\u0438 \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c <code>ransomNote</code> \u0438\u0437 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 <code>magazine</code>, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u0430\u0436\u0434\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u0430.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: ransomNote = \"a\", magazine = \"b\"\n\u0412\u044b\u0445\u043e\u0434: false\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: ransomNote = \"aa\", magazine = \"aab\"\n\u0412\u044b\u0445\u043e\u0434: true\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= ransomNote.length, magazine.length &lt;= 10^5</code> - \u0421\u0442\u0440\u043e\u043a\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0431\u0443\u043a\u0432\u044b.</p>"},{"location":"Hash_Tables/#_10","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-brute-force_1","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 <code>ransomNote</code> \u0432 <code>magazine</code>, \u0443\u0434\u0430\u043b\u044f\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0438\u0437-\u0437\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0433\u043e \u043f\u043e\u0438\u0441\u043a\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p> <pre><code>def canConstruct(ransomNote: str, magazine: str) -&gt; bool:\n    magazine_list = list(magazine)\n    for char in ransomNote:\n        if char in magazine_list:\n            magazine_list.remove(char)\n        else:\n            return False\n    return True\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u041f\u043e\u0438\u0441\u043a \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 <code>ransomNote</code>.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0421\u043f\u0438\u0441\u043e\u043a \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 <code>magazine</code>.</p>"},{"location":"Hash_Tables/#2-hashmap-count-array","title":"2. \u041f\u043e\u0434\u0441\u0447\u0435\u0442 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044f (HashMap / Count Array)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0447\u0430\u0441\u0442\u043e\u0442\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 <code>magazine</code> \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043b\u0438 \u0438\u0445 \u0434\u043b\u044f <code>ransomNote</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p> <pre><code>from collections import defaultdict\n\ndef canConstruct(ransomNote: str, magazine: str) -&gt; bool:\n    char_count = defaultdict(int)\n\n    for char in magazine:\n        char_count[char] += 1\n\n    for char in ransomNote:\n        if char_count[char] &lt;= 0:\n            return False\n        char_count[char] -= 1\n\n    return True\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n + m) - n \u2014 \u0434\u043b\u0438\u043d\u0430 <code>magazine</code>, m \u2014 \u0434\u043b\u0438\u043d\u0430 <code>ransomNote</code>.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0447\u0430\u0441\u0442\u043e\u0442.</p>"},{"location":"Hash_Tables/#3-counter-counter-from-collections","title":"3. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Counter (Counter from Collections)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c <code>Counter</code> \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u0447\u0430\u0441\u0442\u043e\u0442 \u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0423\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u043f\u043e\u0434\u0441\u0447\u0435\u0442 \u0447\u0430\u0441\u0442\u043e\u0442 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438.</p> <pre><code>from collections import Counter\n\ndef canConstruct(ransomNote: str, magazine: str) -&gt; bool:\n    ransom_counter = Counter(ransomNote)\n    magazine_counter = Counter(magazine)\n\n    for char, count in ransom_counter.items():\n        if magazine_counter[char] &lt; count:\n            return False\n    return True\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n + m) - \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 Counter \u0438 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u0442\u043e\u0442.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0424\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 (\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0431\u0443\u043a\u0432\u044b).</p>"},{"location":"Hash_Tables/#6-219-ii","title":"6. 219. \u041d\u0430\u043b\u0438\u0447\u0438\u0435 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432 II","text":""},{"location":"Hash_Tables/#_11","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code> \u0438 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e <code>k</code>, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442 \u043b\u0438 \u0434\u0432\u0430 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438, \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043c\u0435\u0436\u0434\u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 <code>k</code>.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [1,2,3,1], k = 3\n\u0412\u044b\u0445\u043e\u0434: true\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: nums[0] = nums[3] = 1, \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 3 \u2264 k.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [1,2,3,1,2,3], k = 2\n\u0412\u044b\u0445\u043e\u0434: false\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041d\u0435\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0441 \u0440\u0430\u0437\u043d\u0438\u0446\u0435\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u2264 k.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= nums.length &lt;= 10^5</code> - <code>-10^9 &lt;= nums[i] &lt;= 10^9</code> - <code>0 &lt;= k &lt;= 10^5</code></p>"},{"location":"Hash_Tables/#_12","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-brute-force_2","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u0441\u0435 \u043f\u0430\u0440\u044b \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 <code>k</code> \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u0438\u0437-\u0437\u0430 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u0446\u0438\u043a\u043b\u043e\u0432.</p> <pre><code>def containsNearbyDuplicate(nums, k):\n    n = len(nums)\n    for i in range(n):\n        for j in range(i + 1, min(i + k + 1, n)):\n            if nums[i] == nums[j]:\n                return True\n    return False\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n * k) - \u0412 \u0445\u0443\u0434\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c k \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0422\u043e\u043b\u044c\u043a\u043e \u0441\u0447\u0435\u0442\u0447\u0438\u043a\u0438 \u0446\u0438\u043a\u043b\u043e\u0432.</p>"},{"location":"Hash_Tables/#2-hash-map","title":"2. \u0425\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0430 (Hash Map)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044f \u0440\u0430\u0437\u043d\u0438\u0446\u0443 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0425\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0431\u044b\u0441\u0442\u0440\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0435 \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0447\u0438\u0441\u043b\u0430.</p> <pre><code>def containsNearbyDuplicate(nums, k):\n    num_index_map = {}\n    for index, number in enumerate(nums):\n        if number in num_index_map and index - num_index_map[number] &lt;= k:\n            return True\n        num_index_map[number] = index\n    return False\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432.</p>"},{"location":"Hash_Tables/#7-49","title":"7. 49. \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 \u0430\u043d\u0430\u0433\u0440\u0430\u043c\u043c","text":""},{"location":"Hash_Tables/#_13","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0442\u0440\u043e\u043a <code>strs</code>, \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0430\u043d\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0432\u043c\u0435\u0441\u0442\u0435. \u0410\u043d\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u2014 \u044d\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0438, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0441 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0439 \u0447\u0430\u0441\u0442\u043e\u0442\u043e\u0439, \u043d\u043e \u0432 \u0440\u0430\u0437\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435. \u0412\u0435\u0440\u043d\u0438\u0442\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0433\u0440\u0443\u043f\u043f \u0430\u043d\u0430\u0433\u0440\u0430\u043c\u043c.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\n\u0412\u044b\u0445\u043e\u0434: [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \"eat\", \"tea\", \"ate\" \u2014 \u0430\u043d\u0430\u0433\u0440\u0430\u043c\u043c\u044b; \"tan\", \"nat\" \u2014 \u0430\u043d\u0430\u0433\u0440\u0430\u043c\u043c\u044b; \"bat\" \u2014 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0430\u044f \u0433\u0440\u0443\u043f\u043f\u0430.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: strs = [\"\"]\n\u0412\u044b\u0445\u043e\u0434: [[\"\"]]\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0433\u0440\u0443\u043f\u043f\u0443 \u0441\u0430\u043c\u0430 \u043f\u043e \u0441\u0435\u0431\u0435.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= strs.length &lt;= 10^4</code> - <code>0 &lt;= strs[i].length &lt;= 100</code> - <code>strs[i]</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b.</p>"},{"location":"Hash_Tables/#_14","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-using-sorting-and-hash-map","title":"1. \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0438 \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0430 (Using Sorting and Hash Map)","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043a\u0430\u0436\u0434\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443, \u0447\u0442\u043e\u0431\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u043a\u0430\u043a \u043a\u043b\u044e\u0447 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435 \u0434\u043b\u044f \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438 \u0430\u043d\u0430\u0433\u0440\u0430\u043c\u043c.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0410\u043d\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u043f\u0440\u0438 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0435 \u0434\u0430\u044e\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442, \u0447\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c \u0438\u0445 \u043f\u043e\u0434 \u043e\u0434\u043d\u0438\u043c \u043a\u043b\u044e\u0447\u043e\u043c.</p> <pre><code>def groupAnagrams(strs):\n    anagrams = {}\n\n    for s in strs:\n        sorted_str = tuple(sorted(s))\n        if sorted_str not in anagrams:\n            anagrams[sorted_str] = []\n        anagrams[sorted_str].append(s)\n\n    return list(anagrams.values())\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n * m * log m) - n \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a, m \u2014 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438, \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 O(m * log m).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n * m) - \u0414\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043a\u043b\u044e\u0447\u0435\u0439 \u0438 \u0433\u0440\u0443\u043f\u043f \u0430\u043d\u0430\u0433\u0440\u0430\u043c\u043c.</p>"},{"location":"Hash_Tables/#2-using-counting-and-hash-map","title":"2. \u041f\u043e\u0434\u0441\u0447\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0438 \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0430 (Using Counting and Hash Map)","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043a\u043e\u0440\u0442\u0435\u0436 \u0438\u0437 \u0447\u0430\u0441\u0442\u043e\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0435\u0433\u043e \u043a\u0430\u043a \u043a\u043b\u044e\u0447 \u0434\u043b\u044f \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0410\u043d\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0438\u043c\u0435\u044e\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u0443\u044e \u0447\u0430\u0441\u0442\u043e\u0442\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0447\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0435\u0451 \u043a\u0430\u043a \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440.</p> <pre><code>def groupAnagrams(strs):\n    anagrams = {}\n\n    for s in strs:\n        count = [0] * 26\n        for char in s:\n            count[ord(char) - ord('a')] += 1\n        count_tuple = tuple(count)\n        if count_tuple not in anagrams:\n            anagrams[count_tuple] = []\n        anagrams[count_tuple].append(s)\n\n    return list(anagrams.values())\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n * m) - n \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a, m \u2014 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438, \u043f\u043e\u0434\u0441\u0447\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 O(m).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n * m) - \u0414\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043a\u043b\u044e\u0447\u0435\u0439 \u0438 \u0433\u0440\u0443\u043f\u043f \u0430\u043d\u0430\u0433\u0440\u0430\u043c\u043c.</p>"},{"location":"Hash_Tables/#8-535-tinyurl","title":"8. 535. \u041a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 TinyURL","text":""},{"location":"Hash_Tables/#_15","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0434\u043b\u044f \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u0438\u043d\u043d\u043e\u0433\u043e URL \u0432 \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0439 \u0438 \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0433\u043e URL \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u0432 \u0434\u043b\u0438\u043d\u043d\u044b\u0439. \u041a\u043e\u0440\u043e\u0442\u043a\u0438\u0439 URL \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0434\u043b\u0438\u043d\u043d\u043e\u0433\u043e URL.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u0412\u0445\u043e\u0434: longUrl = \"https://leetcode.com/problems/design-tinyurl\"\n\u0412\u044b\u0445\u043e\u0434: \"http://tinyurl.com/4e9iAk\"\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0434\u043b\u0438\u043d\u043d\u044b\u0439 URL \u0432 \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0439, \u0437\u0430\u0442\u0435\u043c \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u043e\u0431\u0440\u0430\u0442\u043d\u043e.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= longUrl.length &lt;= 10^4</code> - <code>longUrl</code> \u2014 \u0432\u0430\u043b\u0438\u0434\u043d\u044b\u0439 URL.</p>"},{"location":"Hash_Tables/#_16","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-hash-map-with-randomly-generated-keys","title":"1. \u0425\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u043c\u0438 \u043a\u043b\u044e\u0447\u0430\u043c\u0438 (Hash Map with Randomly Generated Keys)","text":"<p>\u0418\u0434\u0435\u044f: \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043a\u043b\u044e\u0447 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0430 \u043d\u0430 \u0434\u043b\u0438\u043d\u043d\u044b\u0439 URL.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0421\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441 \u043d\u0438\u0437\u043a\u043e\u0439 \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c\u044e \u043a\u043e\u043b\u043b\u0438\u0437\u0438\u0439.</p> <pre><code>import random\nimport string\n\nclass Codec:\n    def __init__(self):\n        self.url_dict = {}\n        self.base_url = \"http://tinyurl.com/\"\n        self.key_length = 6\n        self.charset = string.ascii_letters + string.digits\n\n    def _generate_key(self):\n        return ''.join(random.choice(self.charset) for _ in range(self.key_length))\n\n    def encode(self, longUrl: str) -&gt; str:\n        key = self._generate_key()\n        while key in self.url_dict:\n            key = self._generate_key()\n        self.url_dict[key] = longUrl\n        return self.base_url + key\n\n    def decode(self, shortUrl: str) -&gt; str:\n        key = shortUrl.replace(self.base_url, \"\")\n        return self.url_dict.get(key, \"\")\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: - \u041a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: O(1) \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c, O(n) \u0432 \u0445\u0443\u0434\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0438\u0437-\u0437\u0430 \u043a\u043e\u043b\u043b\u0438\u0437\u0438\u0439. - \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: O(1).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - n \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 URL.</p>"},{"location":"Hash_Tables/#2-base62-base62-encoding","title":"2. \u041a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 Base62 (Base62 Encoding)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u0438\u0441\u0432\u0430\u0438\u0432\u0430\u0435\u043c \u043a\u0430\u0436\u0434\u043e\u043c\u0443 URL \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 ID \u0438 \u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0435\u0433\u043e \u0432 Base62 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0433\u043e URL.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: Base62 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043a\u043e\u043c\u043f\u0430\u043a\u0442\u043d\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0447\u0438\u0441\u043b\u0430, \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u044f \u0434\u043b\u0438\u043d\u0443 \u043a\u043b\u044e\u0447\u0430.</p> <pre><code>class Codec:\n    def __init__(self):\n        self.id_to_url = {}\n        self.url_to_id = {}\n        self.base_url = \"http://tinyurl.com/\"\n        self.charset = string.ascii_letters + string.digits\n        self.counter = 0\n\n    def _encode_id(self, id):\n        if id == 0:\n            return self.charset[0]\n        base62 = []\n        while id:\n            id, rem = divmod(id, 62)\n            base62.append(self.charset[rem])\n        return ''.join(reversed(base62))\n\n    def _decode_id(self, base62_str):\n        id = 0\n        for char in base62_str:\n            id = id * 62 + self.charset.index(char)\n        return id\n\n    def encode(self, longUrl: str) -&gt; str:\n        if longUrl in self.url_to_id:\n            id = self.url_to_id[longUrl]\n        else:\n            self.counter += 1\n            id = self.counter\n            self.url_to_id[longUrl] = id\n            self.id_to_url[id] = longUrl\n        return self.base_url + self._encode_id(id)\n\n    def decode(self, shortUrl: str) -&gt; str:\n        base62_str = shortUrl.replace(self.base_url, \"\")\n        id = self._decode_id(base62_str)\n        return self.id_to_url.get(id, \"\")\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: - \u041a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: O(log n) \u0438\u0437-\u0437\u0430 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0432 Base62. - \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: O(log n).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439.</p>"},{"location":"Hash_Tables/#9-767","title":"9. 767. \u041f\u0435\u0440\u0435\u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438","text":""},{"location":"Hash_Tables/#_17","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 <code>s</code>, \u043f\u0435\u0440\u0435\u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0442\u0435 \u0435\u0451 \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043d\u0435 \u0441\u0442\u043e\u044f\u043b\u0438 \u0440\u044f\u0434\u043e\u043c. \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0432\u0435\u0440\u043d\u0438\u0442\u0435 \u043f\u0443\u0441\u0442\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: s = \"aab\"\n\u0412\u044b\u0445\u043e\u0434: \"aba\"\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: s = \"aaab\"\n\u0412\u044b\u0445\u043e\u0434: \"\"\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041d\u0435\u043b\u044c\u0437\u044f \u043f\u0435\u0440\u0435\u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0442\u044c, \u0442\u0430\u043a \u043a\u0430\u043a 'a' \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0447\u0430\u0441\u0442\u043e.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= s.length &lt;= 500</code> - <code>s</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b.</p>"},{"location":"Hash_Tables/#_18","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-greedy-with-max-heap","title":"1. \u0416\u0430\u0434\u043d\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0441 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u0443\u0447\u0435\u0439 (Greedy with Max Heap)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u043a\u0443\u0447\u0443 \u0434\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0441 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0447\u0430\u0441\u0442\u043e\u0442\u043e\u0439, \u0440\u0430\u0437\u043c\u0435\u0449\u0430\u044f \u0438\u0445 \u0447\u0435\u0440\u0435\u0437 \u043e\u0434\u0438\u043d.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0427\u0430\u0441\u0442\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0440\u0430\u0432\u043d\u043e\u043c\u0435\u0440\u043d\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0441\u043e\u0441\u0435\u0434\u0441\u0442\u0432\u0430.</p> <pre><code>import heapq\nfrom collections import Counter\n\ndef reorganizeString(s: str) -&gt; str:\n    char_count = Counter(s)\n    max_heap = [(-freq, char) for char, freq in char_count.items()]\n    heapq.heapify(max_heap)\n\n    result = []\n\n    while len(max_heap) &gt; 1:\n        freq1, char1 = heapq.heappop(max_heap)\n        freq2, char2 = heapq.heappop(max_heap)\n\n        result.extend([char1, char2])\n\n        if freq1 + 1 &lt; 0:\n            heapq.heappush(max_heap, (freq1 + 1, char1))\n        if freq2 + 1 &lt; 0:\n            heapq.heappush(max_heap, (freq2 + 1, char2))\n\n    if max_heap:\n        freq, char = heapq.heappop(max_heap)\n        if freq + 1 &lt; 0:\n            return \"\"\n        result.append(char)\n\n    return \"\".join(result)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n * log k) - n \u2014 \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438, k \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(k) - \u0414\u043b\u044f \u043a\u0443\u0447\u0438 \u0438 \u0441\u0447\u0435\u0442\u0447\u0438\u043a\u0430.</p>"},{"location":"Hash_Tables/#2-count-and-sort","title":"2. \u041f\u043e\u0434\u0441\u0447\u0435\u0442 \u0438 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 (Count and Sort)","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043f\u043e \u0447\u0430\u0441\u0442\u043e\u0442\u0435 \u0438 \u0440\u0430\u0437\u043c\u0435\u0449\u0430\u0435\u043c \u0438\u0445 \u0432 \u0447\u0435\u0442\u043d\u044b\u0445 \u0438 \u043d\u0435\u0447\u0435\u0442\u043d\u044b\u0445 \u043f\u043e\u0437\u0438\u0446\u0438\u044f\u0445.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0427\u0430\u0441\u0442\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0440\u0430\u0437\u043c\u0435\u0449\u0430\u044e\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u043e\u0434\u0438\u043d, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0441\u043e\u0441\u0435\u0434\u0441\u0442\u0432\u0430.</p> <pre><code>from collections import Counter\n\ndef reorganizeString(s: str) -&gt; str:\n    char_count = Counter(s)\n    sorted_chars = sorted(char_count, key=lambda x: -char_count[x])\n\n    res = [''] * len(s)\n    index = 0\n\n    for char in sorted_chars:\n        count = char_count[char]\n        if count &gt; (len(s) + 1) // 2:\n            return \"\"\n        for _ in range(count):\n            if index &gt;= len(s):\n                index = 1\n            res[index] = char\n            index += 2\n\n    return ''.join(res)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n + k * log k) - n \u2014 \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438, k \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u043b\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0438 \u0441\u0447\u0435\u0442\u0447\u0438\u043a\u0430.</p>"},{"location":"Hash_Tables/#10-128","title":"10. 128. \u041d\u0430\u0438\u0434\u043b\u0438\u043d\u043d\u0435\u0439\u0448\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c","text":""},{"location":"Hash_Tables/#_19","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043d\u0435\u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code>, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u0434\u043b\u0438\u043d\u0443 \u043d\u0430\u0438\u0434\u043b\u0438\u043d\u043d\u0435\u0439\u0448\u0435\u0439 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [100,4,200,1,3,2]\n\u0412\u044b\u0445\u043e\u0434: 4\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c [1,2,3,4] \u0438\u043c\u0435\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 4.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [0,3,7,2,5,8,4,6,0,1]\n\u0412\u044b\u0445\u043e\u0434: 9\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>0 &lt;= nums.length &lt;= 10^4</code> - <code>-10^9 &lt;= nums[i] &lt;= 10^9</code></p>"},{"location":"Hash_Tables/#_20","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-sort-and-check-consecutivity","title":"1. \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 (Sort and Check Consecutivity)","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u0438 \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0434\u043b\u0438\u043d\u0443 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u043e\u0441\u043b\u0435 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u0431\u0443\u0434\u0443\u0442 \u0440\u044f\u0434\u043e\u043c, \u0447\u0442\u043e \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u043f\u043e\u0434\u0441\u0447\u0435\u0442.</p> <pre><code>def longestConsecutive(nums):\n    if not nums:\n        return 0\n\n    nums.sort()\n    longest_streak = 1\n    current_streak = 1\n\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            continue\n        elif nums[i] == nums[i - 1] + 1:\n            current_streak += 1\n        else:\n            longest_streak = max(longest_streak, current_streak)\n            current_streak = 1\n\n    return max(longest_streak, current_streak)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n * log n) - \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 O(n * log n).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0411\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0434\u043b\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438.</p>"},{"location":"Hash_Tables/#2-using-hashset","title":"2. \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 (Using HashSet)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0447\u0438\u0441\u0435\u043b \u0438 \u0441\u0442\u0440\u043e\u0438\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439, \u0447\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u043b\u0438\u0448\u043d\u0438\u0445 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0439.</p> <pre><code>def longestConsecutive(nums):\n    num_set = set(nums)\n    longest_streak = 0\n\n    for num in num_set:\n        if num - 1 not in num_set:\n            current_num = num\n            current_streak = 1\n\n            while current_num + 1 in num_set:\n                current_num += 1\n                current_streak += 1\n\n            longest_streak = max(longest_streak, current_streak)\n\n    return longest_streak\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u0434\u0432\u0443\u0445 \u0440\u0430\u0437.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430.</p>"},{"location":"Hash_Tables/#11-659","title":"11. 659. \u0420\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438","text":""},{"location":"Hash_Tables/#_21","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code>, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u043c\u043e\u0436\u043d\u043e \u043b\u0438 \u0440\u0430\u0437\u0431\u0438\u0442\u044c \u0435\u0433\u043e \u043d\u0430 \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 \u0447\u0435\u043c \u0442\u0440\u0435\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [1,2,3,3,4,5]\n\u0412\u044b\u0445\u043e\u0434: true\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: [1,2,3], [3,4,5]\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [1,2,3,4,4,5]\n\u0412\u044b\u0445\u043e\u0434: false\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= nums.length &lt;= 10^4</code> - \u041c\u0430\u0441\u0441\u0438\u0432 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e.</p>"},{"location":"Hash_Tables/#_22","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-straightforward-counting-method","title":"1. \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043c\u0435\u0442\u043e\u0434 \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 (Straightforward Counting Method)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0447\u0430\u0441\u0442\u043e\u0442\u0443 \u0447\u0438\u0441\u0435\u043b \u0438 \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0436\u0430\u0434\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f \u0447\u0438\u0441\u043b\u0430 \u043a \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044f\u043c \u0438\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u044f \u043d\u043e\u0432\u044b\u0435.</p> <pre><code>def isPossible(nums):\n    from collections import defaultdict\n\n    freq = defaultdict(int)\n    subs = defaultdict(int)\n\n    for num in nums:\n        freq[num] += 1\n\n    for num in nums:\n        if freq[num] == 0:\n            continue\n\n        if subs[num - 1] &gt; 0:\n            subs[num - 1] -= 1\n            subs[num] += 1\n        elif freq[num + 1] &gt; 0 and freq[num + 2] &gt; 0:\n            freq[num + 1] -= 1\n            freq[num + 2] -= 1\n            subs[num + 2] += 1\n        else:\n            return False\n\n        freq[num] -= 1\n\n    return True\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u043b\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u0439 \u0447\u0430\u0441\u0442\u043e\u0442 \u0438 \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439.</p>"},{"location":"Hash_Tables/#2-optimized-greedy-approach","title":"2. \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0436\u0430\u0434\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 (Optimized Greedy Approach)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u0432\u0430 \u0441\u043b\u043e\u0432\u0430\u0440\u044f: \u043e\u0434\u0438\u043d \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043e\u0442\u044b \u0447\u0438\u0441\u0435\u043b, \u0434\u0440\u0443\u0433\u043e\u0439 \u0434\u043b\u044f \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439, \u0442\u0440\u0435\u0431\u0443\u044e\u0449\u0438\u0445 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0447\u0438\u0441\u043b\u0430.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0416\u0430\u0434\u043d\u044b\u0439 \u0432\u044b\u0431\u043e\u0440 \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439.</p> <pre><code>def isPossible(nums):\n    from collections import defaultdict\n\n    freq = defaultdict(int)\n    appendfreq = defaultdict(int)\n\n    for num in nums:\n        freq[num] += 1\n\n    for num in nums:\n        if freq[num] == 0:\n            continue\n        elif appendfreq[num - 1] &gt; 0:\n            appendfreq[num - 1] -= 1\n            appendfreq[num] += 1\n        elif freq[num + 1] &gt; 0 and freq[num + 2] &gt; 0:\n            freq[num + 1] -= 1\n            freq[num + 2] -= 1\n            appendfreq[num + 2] += 1\n        else:\n            return False\n        freq[num] -= 1\n\n    return True\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u043b\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u0439.</p>"},{"location":"Hash_Tables/#12-792","title":"12. 792. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439","text":""},{"location":"Hash_Tables/#_23","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u044b \u0441\u0442\u0440\u043e\u043a\u0430 <code>s</code> \u0438 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0442\u0440\u043e\u043a <code>words</code>, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u043b\u043e\u0432 \u0438\u0437 <code>words</code> \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044f\u043c\u0438 \u0441\u0442\u0440\u043e\u043a\u0438 <code>s</code>.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: s = \"abcde\", words = [\"a\",\"bb\",\"acd\",\"ace\"]\n\u0412\u044b\u0445\u043e\u0434: 3\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \"a\", \"acd\", \"ace\" \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044f\u043c\u0438.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: s = \"dsahjpjauf\", words = [\"ahjpjau\",\"ja\",\"ahbwzg\",\"auj\"]\n\u0412\u044b\u0445\u043e\u0434: 2\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= s.length &lt;= 5 * 10^4</code> - <code>1 &lt;= words.length &lt;= 5000</code> - <code>1 &lt;= words[i].length &lt;= 50</code> - \u0412\u0441\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0431\u0443\u043a\u0432\u044b.</p>"},{"location":"Hash_Tables/#_24","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-brute-force-with-two-pointers","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 \u0441 \u0434\u0432\u0443\u043c\u044f \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\u043c\u0438 (Brute Force With Two Pointers)","text":"<p>\u0418\u0434\u0435\u044f: \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043e\u043d\u043e \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e <code>s</code>, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0438\u0437-\u0437\u0430 \u043c\u043d\u043e\u0433\u043e\u043a\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0441\u043a\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f <code>s</code>.</p> <pre><code>def numMatchingSubseq(s, words):\n    def isSubsequence(word, s):\n        i = 0\n        for char in s:\n            if i &lt; len(word) and word[i] == char:\n                i += 1\n            if i == len(word):\n                return True\n        return i == len(word)\n\n    count = 0\n    for word in words:\n        if isSubsequence(word, s):\n            count += 1\n    return count\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n * m) - n \u2014 \u0434\u043b\u0438\u043d\u0430 <code>s</code>, m \u2014 \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u0430 \u0441\u043b\u043e\u0432.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0411\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.</p>"},{"location":"Hash_Tables/#2-frequency-with-maps","title":"2. \u0427\u0430\u0441\u0442\u043e\u0442\u0430 \u0441 \u043a\u0430\u0440\u0442\u0430\u043c\u0438 (Frequency with Maps)","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 <code>s</code> \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0435\u0439.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 <code>s</code> \u0443\u0441\u043a\u043e\u0440\u044f\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0441\u043b\u043e\u0432.</p> <pre><code>from collections import defaultdict\nfrom bisect import bisect_left\n\ndef numMatchingSubseq(s, words):\n    char_indices = defaultdict(list)\n\n    for index, char in enumerate(s):\n        char_indices[char].append(index)\n\n    count = 0\n    for word in words:\n        prev_index = -1\n        found = True\n\n        for char in word:\n            if char not in char_indices:\n                found = False\n                break\n\n            next_pos = bisect_left(char_indices[char], prev_index + 1)\n            if next_pos == len(char_indices[char]):\n                found = False\n                break\n\n            prev_index = char_indices[char][next_pos]\n\n        if found:\n            count += 1\n    return count\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n + w * log m) - n \u2014 \u0434\u043b\u0438\u043d\u0430 <code>s</code>, w \u2014 \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u0430 \u0441\u043b\u043e\u0432, m \u2014 \u0441\u0440\u0435\u0434\u043d\u044f\u044f \u0447\u0430\u0441\u0442\u043e\u0442\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432.</p>"},{"location":"Hash_Tables/#3-indexed-characters-with-binary-search","title":"3. \u0418\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0441 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u043c \u043f\u043e\u0438\u0441\u043a\u043e\u043c (Indexed Characters with Binary Search)","text":"<p>\u0418\u0434\u0435\u044f: \u0422\u043e \u0436\u0435, \u0447\u0442\u043e \u0438 \u0432\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u043d\u043e \u0441 \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0435\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041c\u043e\u0434\u0443\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u0434\u0430 \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435.</p> <pre><code>from collections import defaultdict\nfrom bisect import bisect_left\n\ndef numMatchingSubseq(s, words):\n    char_indices = defaultdict(list)\n\n    for index, char in enumerate(s):\n        char_indices[char].append(index)\n\n    def isSubsequence(word):\n        prev_position = -1\n        for char in word:\n            if char not in char_indices:\n                return False\n\n            idx = bisect_left(char_indices[char], prev_position + 1)\n            if idx == len(char_indices[char]):\n                return False\n\n            prev_position = char_indices[char][idx]\n\n        return True\n\n    return sum(isSubsequence(word) for word in words)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n + w * log n) - \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u0432\u0442\u043e\u0440\u043e\u043c\u0443 \u043f\u043e\u0434\u0445\u043e\u0434\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432.</p>"},{"location":"Hash_Tables/#13-1525","title":"13. 1525. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0445\u043e\u0440\u043e\u0448\u0438\u0445 \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443","text":""},{"location":"Hash_Tables/#_25","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 <code>s</code>, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0435\u0451 \u043d\u0430 \u0434\u0432\u0435 \u043d\u0435\u043f\u0443\u0441\u0442\u044b\u0435 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438, \u0442\u0430\u043a\u0438\u0435 \u0447\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u043b\u0435\u0432\u043e\u0439 \u0438 \u043f\u0440\u0430\u0432\u043e\u0439 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0440\u0430\u0432\u043d\u043e.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: s = \"aacaba\"\n\u0412\u044b\u0445\u043e\u0434: 2\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \"aa|caba\" \u0438 \"aac|aba\" \u0434\u0430\u044e\u0442 \u0440\u0430\u0432\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: s = \"abcd\"\n\u0412\u044b\u0445\u043e\u0434: 1\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 \"ab|cd\" \u0434\u0430\u0435\u0442 2 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0447\u0430\u0441\u0442\u0438.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= s.length &lt;= 10^5</code> - <code>s</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b.</p>"},{"location":"Hash_Tables/#_26","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Hash_Tables/#1-brute-force-approach","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force Approach)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u0430\u0436\u0434\u0443\u044e \u0442\u043e\u0447\u043a\u0443 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f, \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043b\u0435\u0432\u043e\u0439 \u0438 \u043f\u0440\u0430\u0432\u043e\u0439 \u0447\u0430\u0441\u0442\u044f\u0445.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0438\u0437-\u0437\u0430 \u043c\u043d\u043e\u0433\u043e\u043a\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430.</p> <pre><code>def numSplits(s: str) -&gt; int:\n    result = 0\n    n = len(s)\n\n    for i in range(1, n):\n        left_unique = set(s[:i])\n        right_unique = set(s[i:])\n\n        if len(left_unique) == len(right_unique):\n            result += 1\n\n    return result\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u041f\u043e\u0434\u0441\u0447\u0435\u0442 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432.</p>"},{"location":"Hash_Tables/#2-optimized-prefix-and-suffix-frequency-arrays","title":"2. \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043d\u044b\u0435 \u0438 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b (Optimized Prefix and Suffix Frequency Arrays)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043d\u044b\u0435 \u0438 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0438\u0437\u0431\u0435\u0433\u0430\u044f \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0445 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0439.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0431\u044b\u0441\u0442\u0440\u043e \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p> <pre><code>from collections import defaultdict\n\ndef numSplits(s: str) -&gt; int:\n    left_count = [0] * len(s)\n    right_count = [0] * len(s)\n\n    prefix_char_count = defaultdict(int)\n    suffix_char_count = defaultdict(int)\n\n    unique_chars_left = 0\n    for i in range(len(s)):\n        char = s[i]\n        if prefix_char_count[char] == 0:\n            unique_chars_left += 1\n        prefix_char_count[char] += 1\n        left_count[i] = unique_chars_left\n\n    unique_chars_right = 0\n    for i in range(len(s) - 1, -1, -1):\n        char = s[i]\n        if suffix_char_count[char] == 0:\n            unique_chars_right += 1\n        suffix_char_count[char] += 1\n        right_count[i] = unique_chars_right\n\n    result = 0\n    for i in range(1, len(s)):\n        if left_count[i - 1] == right_count[i]:\n            result += 1\n\n    return result\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0414\u0432\u0430 \u043f\u0440\u043e\u0445\u043e\u0434\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0438 \u043e\u0434\u0438\u043d \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0424\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u0439 \u0434\u043b\u044f \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u0430.</p>"},{"location":"Sliding_Window_Dynamic_Size/","title":"Sliding Window Dynamic Size","text":""},{"location":"Sliding_Window_Dynamic_Size/#1-3","title":"1. 3. \u041d\u0430\u0438\u0434\u043b\u0438\u043d\u043d\u0435\u0439\u0448\u0430\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \u0431\u0435\u0437 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0445\u0441\u044f \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","text":""},{"location":"Sliding_Window_Dynamic_Size/#_1","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 <code>s</code>, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u0434\u043b\u0438\u043d\u0443 \u043d\u0430\u0438\u0434\u043b\u0438\u043d\u043d\u0435\u0439\u0448\u0435\u0439 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 \u0431\u0435\u0437 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0445\u0441\u044f \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: s = \"abcabcbb\"\n\u0412\u044b\u0445\u043e\u0434: 3\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \"abc\" \u2014 \u043d\u0430\u0438\u0434\u043b\u0438\u043d\u043d\u0435\u0439\u0448\u0430\u044f \u0431\u0435\u0437 \u043f\u043e\u0432\u0442\u043e\u0440\u0435\u043d\u0438\u0439, \u0434\u043b\u0438\u043d\u0430 3.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: s = \"bbbbb\"\n\u0412\u044b\u0445\u043e\u0434: 1\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \"b\" \u2014 \u043d\u0430\u0438\u0434\u043b\u0438\u043d\u043d\u0435\u0439\u0448\u0430\u044f, \u0434\u043b\u0438\u043d\u0430 1.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 3:\n\u0412\u0445\u043e\u0434: s = \"pwwkew\"\n\u0412\u044b\u0445\u043e\u0434: 3\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \"wke\" \u2014 \u043d\u0430\u0438\u0434\u043b\u0438\u043d\u043d\u0435\u0439\u0448\u0430\u044f, \u0434\u043b\u0438\u043d\u0430 3.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>0 &lt;= s.length &lt;= 5 * 10^4</code> - <code>s</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b, \u0446\u0438\u0444\u0440\u044b, \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u044b.</p>"},{"location":"Sliding_Window_Dynamic_Size/#_2","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Sliding_Window_Dynamic_Size/#1-brute-force","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u0430\u0436\u0434\u0443\u044e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0443\u044e \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0443 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0438\u0437-\u0437\u0430 \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438.</p> <pre><code>def lengthOfLongestSubstring(s: str) -&gt; int:\n    n = len(s)\n    max_length = 0\n\n    for i in range(n):\n        seen_chars = set()\n        current_length = 0\n\n        for j in range(i, n):\n            if s[j] in seen_chars:\n                break\n            seen_chars.add(s[j])\n            current_length += 1\n\n        max_length = max(max_length, current_length)\n\n    return max_length\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b3) - \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a O(n\u00b2), \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 O(n).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(min(n, m)) - m \u2014 \u0440\u0430\u0437\u043c\u0435\u0440 \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u0430 (\u0434\u043b\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430).</p>"},{"location":"Sliding_Window_Dynamic_Size/#2-sliding-window-with-set","title":"2. \u0421\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0441 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e\u043c (Sliding Window with Set)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0438 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0434\u043b\u044f \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u0438 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u0430 \u0441\u0443\u0436\u0430\u0435\u043c \u043e\u043a\u043d\u043e, \u0443\u0434\u0430\u043b\u044f\u044f \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0441 \u043d\u0430\u0447\u0430\u043b\u0430.</p> <pre><code>def lengthOfLongestSubstring(s: str) -&gt; int:\n    n = len(s)\n    max_length = 0\n    seen_chars = set()\n    i = 0\n\n    for j in range(n):\n        while s[j] in seen_chars:\n            seen_chars.remove(s[i])\n            i += 1\n        seen_chars.add(s[j])\n        max_length = max(max_length, j - i + 1)\n\n    return max_length\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041a\u0430\u0436\u0434\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438 \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u0430.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(min(n, m)) - \u0414\u043b\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p>"},{"location":"Sliding_Window_Dynamic_Size/#3-sliding-window-with-hashmap","title":"3. \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0441 \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 (Sliding Window with HashMap)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430, \u0447\u0442\u043e\u0431\u044b \u0441\u0440\u0430\u0437\u0443 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u043e \u043e\u043a\u043d\u0430 \u043f\u0440\u0438 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u0435.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u044f\u043c\u043e\u0439 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0438\u043d\u0434\u0435\u043a\u0441\u0443 \u043f\u043e\u0441\u043b\u0435 \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u0430 \u0443\u0441\u043a\u043e\u0440\u044f\u0435\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441.</p> <pre><code>def lengthOfLongestSubstring(s: str) -&gt; int:\n    char_index_map = {}\n    max_length = 0\n    i = 0\n\n    for j, char in enumerate(s):\n        if char in char_index_map:\n            i = max(char_index_map[char] + 1, i)\n        max_length = max(max_length, j - i + 1)\n        char_index_map[char] = j\n\n    return max_length\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u0441\u0442\u0440\u043e\u043a\u0435.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(min(n, m)) - \u0414\u043b\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u044f.</p>"},{"location":"Sliding_Window_Dynamic_Size/#2-424","title":"2. 424. \u041d\u0430\u0438\u0434\u043b\u0438\u043d\u043d\u0435\u0439\u0448\u0430\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \u0441 \u0437\u0430\u043c\u0435\u043d\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432","text":""},{"location":"Sliding_Window_Dynamic_Size/#_3","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 <code>s</code> \u0438 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e <code>k</code>. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u0434\u043e <code>k</code> \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 \u043d\u0430 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b. \u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u0434\u043b\u0438\u043d\u0443 \u043d\u0430\u0438\u0434\u043b\u0438\u043d\u043d\u0435\u0439\u0448\u0435\u0439 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0439 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043c\u0435\u043d.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: s = \"ABAB\", k = 2\n\u0412\u044b\u0445\u043e\u0434: 4\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0434\u0432\u0430 'B' \u043d\u0430 'A' \u0438\u043b\u0438 \u043d\u0430\u043e\u0431\u043e\u0440\u043e\u0442, \u043f\u043e\u043b\u0443\u0447\u0430\u044f \"AAAA\" \u0438\u043b\u0438 \"BBBB\".\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: s = \"AABABBA\", k = 1\n\u0412\u044b\u0445\u043e\u0434: 4\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u043e\u0434\u0438\u043d 'A' \u043d\u0430 'B' \u0432 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0435 \"ABBA\", \u043f\u043e\u043b\u0443\u0447\u0430\u044f \"BBBB\".\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= s.length &lt;= 10^5</code> - <code>s</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u0433\u043b\u0430\u0432\u043d\u044b\u0435 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b. - <code>0 &lt;= k &lt;= s.length</code></p>"},{"location":"Sliding_Window_Dynamic_Size/#_4","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Sliding_Window_Dynamic_Size/#1-brute-force_1","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u0430\u0436\u0434\u0443\u044e \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0443, \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0447\u0430\u0441\u0442\u043e\u0442\u044b \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u043c\u043e\u0436\u043d\u043e \u043b\u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0435\u0451 \u043e\u0434\u043d\u043e\u0440\u043e\u0434\u043d\u043e\u0439 \u0441 <code>k</code> \u0437\u0430\u043c\u0435\u043d\u0430\u043c\u0438.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439, \u043d\u043e \u043a\u0440\u0430\u0439\u043d\u0435 \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434.</p> <pre><code>def characterReplacement(s: str, k: int) -&gt; int:\n    max_length = 0\n    n = len(s)\n\n    for i in range(n):\n        freq = {}\n        for j in range(i, n):\n            freq[s[j]] = freq.get(s[j], 0) + 1\n            max_freq = max(freq.values())\n            if (j - i + 1) - max_freq &lt;= k:\n                max_length = max(max_length, j - i + 1)\n\n    return max_length\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b3) - \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a O(n\u00b2), \u043f\u043e\u0434\u0441\u0447\u0435\u0442 \u0447\u0430\u0441\u0442\u043e\u0442 O(n).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d 26 \u0431\u0443\u043a\u0432\u0430\u043c\u0438.</p>"},{"location":"Sliding_Window_Dynamic_Size/#2-sliding-window-with-fixed-window-size","title":"2. \u0421\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0441 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c (Sliding Window with Fixed Window Size)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043e\u043a\u043d\u0430 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430, \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u044f, \u043c\u043e\u0436\u043d\u043e \u043b\u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0438\u0445 \u043e\u0434\u043d\u043e\u0440\u043e\u0434\u043d\u044b\u043c\u0438 \u0441 <code>k</code> \u0437\u0430\u043c\u0435\u043d\u0430\u043c\u0438.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0423\u043c\u0435\u043d\u044c\u0448\u0430\u0435\u0442 \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c, \u043d\u043e \u0432\u0441\u0451 \u0435\u0449\u0451 \u043d\u0435 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e.</p> <pre><code>def characterReplacement(s: str, k: int) -&gt; int:\n    max_length = 0\n    n = len(s)\n\n    for window_size in range(1, n + 1):\n        max_freq = 0\n        freq = {}\n        for i in range(n):\n            freq[s[i]] = freq.get(s[i], 0) + 1\n            if i - window_size &gt;= 0:\n                freq[s[i - window_size]] -= 1\n                if freq[s[i - window_size]] == 0:\n                    del freq[s[i - window_size]]\n            max_freq = max(max_freq, freq.get(s[i], 0))\n            if (window_size - max_freq) &lt;= k:\n                max_length = max(max_length, window_size)\n\n    return max_length\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432\u0441\u0435\u0445 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u0432 \u043e\u043a\u043e\u043d.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d 26 \u0431\u0443\u043a\u0432\u0430\u043c\u0438.</p>"},{"location":"Sliding_Window_Dynamic_Size/#3-optimal-sliding-window","title":"3. \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e (Optimal Sliding Window)","text":"<p>\u0418\u0434\u0435\u044f: \u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u043c \u043e\u043a\u043d\u043e, \u043f\u043e\u043a\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043c\u0435\u043d \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 <code>k</code>, \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043b\u0438\u043d\u0443.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u043e\u0442\u044b \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u043e\u043a\u043d\u043e\u043c.</p> <pre><code>def characterReplacement(s: str, k: int) -&gt; int:\n    max_length = 0\n    max_freq = 0\n    freq = {}\n    left = 0\n\n    for right in range(len(s)):\n        char = s[right]\n        freq[char] = freq.get(char, 0) + 1\n        max_freq = max(max_freq, freq[char])\n\n        while (right - left + 1) - max_freq &gt; k:\n            freq[s[left]] -= 1\n            left += 1\n\n        max_length = max(max_length, right - left + 1)\n\n    return max_length\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041a\u0430\u0436\u0434\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u0434\u0432\u0443\u0445 \u0440\u0430\u0437.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d 26 \u0431\u0443\u043a\u0432\u0430\u043c\u0438.</p>"},{"location":"Sliding_Window_Dynamic_Size/#3-209","title":"3. 209. \u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0443\u043c\u043c\u043e\u0439","text":""},{"location":"Sliding_Window_Dynamic_Size/#_5","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code> \u0438 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e <code>target</code>, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043b\u0438\u043d\u0443 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u0441\u0443\u043c\u043c\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 <code>target</code>. \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u043e\u0433\u043e \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0435\u0442, \u0432\u0435\u0440\u043d\u0438\u0442\u0435 0.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: target = 7, nums = [2,3,1,2,4,3]\n\u0412\u044b\u0445\u043e\u0434: 2\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432 [4,3] \u0438\u043c\u0435\u0435\u0442 \u0441\u0443\u043c\u043c\u0443 7 \u0438 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043b\u0438\u043d\u0443 2.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: target = 4, nums = [1,4,4]\n\u0412\u044b\u0445\u043e\u0434: 1\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432 [4] \u0438\u043c\u0435\u0435\u0442 \u0441\u0443\u043c\u043c\u0443 4 \u0438 \u0434\u043b\u0438\u043d\u0443 1.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= target &lt;= 10^9</code> - <code>1 &lt;= nums.length &lt;= 10^5</code> - <code>1 &lt;= nums[i] &lt;= 10^4</code></p>"},{"location":"Sliding_Window_Dynamic_Size/#_6","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Sliding_Window_Dynamic_Size/#1-brute-force-approach","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute-force Approach)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u0430\u0436\u0434\u044b\u0439 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0439 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432, \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u0441\u0443\u043c\u043c\u0443, \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043b\u0438\u043d\u0443, \u0435\u0441\u043b\u0438 \u0441\u0443\u043c\u043c\u0430 \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 <code>target</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434.</p> <pre><code>def minSubArrayLen(target, nums):\n    n = len(nums)\n    min_length = float('inf')\n\n    for start in range(n):\n        sum = 0\n        for end in range(start, n):\n            sum += nums[end]\n            if sum &gt;= target:\n                min_length = min(min_length, end - start + 1)\n                break\n\n    return 0 if min_length == float('inf') else min_length\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 O(n\u00b2).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0422\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.</p>"},{"location":"Sliding_Window_Dynamic_Size/#2-sliding-window-approach","title":"2. \u0421\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e (Sliding Window Approach)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e, \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u044f \u0435\u0433\u043e \u0434\u043e \u0434\u043e\u0441\u0442\u0438\u0436\u0435\u043d\u0438\u044f \u0441\u0443\u043c\u043c\u044b \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 <code>target</code>, \u0437\u0430\u0442\u0435\u043c \u0441\u0443\u0436\u0430\u044f \u0434\u043b\u044f \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u0438 \u0434\u043b\u0438\u043d\u044b.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u043a\u043d\u043e\u043c \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f.</p> <pre><code>def minSubArrayLen(target, nums):\n    n = len(nums)\n    min_length = float('inf')\n    left = 0\n    current_sum = 0\n\n    for right in range(n):\n        current_sum += nums[right]\n\n        while current_sum &gt;= target:\n            min_length = min(min_length, right - left + 1)\n            current_sum -= nums[left]\n            left += 1\n\n    return 0 if min_length == float('inf') else min_length\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438 \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u0430.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0422\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.</p>"},{"location":"Sliding_Window_Dynamic_Size/#4-1004-iii","title":"4. 1004. \u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0435\u0434\u0438\u043d\u0438\u0446 III","text":""},{"location":"Sliding_Window_Dynamic_Size/#_7","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 <code>A</code> \u0438 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e <code>K</code>. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u0434\u043e <code>K</code> \u043d\u0443\u043b\u0435\u0439 \u043d\u0430 \u0435\u0434\u0438\u043d\u0438\u0446\u044b. \u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043b\u0438\u043d\u0443 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0433\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043c\u0435\u043d.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: A = [1,1,1,0,0,0,1,1,1,1,0], K = 2\n\u0412\u044b\u0445\u043e\u0434: 6\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0434\u0432\u0430 \u043d\u0443\u043b\u044f \u0432 [1,1,1,0,0,1,1,1,1] \u043d\u0430 \u0435\u0434\u0438\u043d\u0438\u0446\u044b, \u043f\u043e\u043b\u0443\u0447\u0430\u044f [1,1,1,1,1,1].\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: A = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3\n\u0412\u044b\u0445\u043e\u0434: 10\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= A.length &lt;= 10^5</code> - <code>A[i]</code> \u0440\u0430\u0432\u043d\u043e 0 \u0438\u043b\u0438 1. - <code>0 &lt;= K &lt;= A.length</code></p>"},{"location":"Sliding_Window_Dynamic_Size/#_8","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Sliding_Window_Dynamic_Size/#1-brute-force_2","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432, \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0443\u043b\u0435\u0439, \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043b\u0438\u043d\u0443, \u0435\u0441\u043b\u0438 \u043d\u0443\u043b\u0435\u0439 \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 <code>K</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434.</p> <pre><code>def longestOnes(A, K):\n    max_consecutive_ones = 0\n    n = len(A)\n\n    for start in range(n):\n        zeros_count = 0\n        for end in range(start, n):\n            if A[end] == 0:\n                zeros_count += 1\n            if zeros_count &lt;= K:\n                max_consecutive_ones = max(max_consecutive_ones, end - start + 1)\n            else:\n                break\n\n    return max_consecutive_ones\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 O(n\u00b2).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0422\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.</p>"},{"location":"Sliding_Window_Dynamic_Size/#2-sliding-window","title":"2. \u0421\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e (Sliding Window)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e, \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u044f \u0435\u0433\u043e \u0438 \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u044f <code>K</code> \u043f\u0440\u0438 \u0432\u0441\u0442\u0440\u0435\u0447\u0435 \u043d\u0443\u043b\u0435\u0439, \u0441\u0443\u0436\u0430\u044f \u043e\u043a\u043d\u043e, \u0435\u0441\u043b\u0438 <code>K</code> \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043d\u0443\u043b\u0435\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043d\u0430\u0439\u0442\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043a\u043d\u043e.</p> <pre><code>def longestOnes(A, K):\n    left = 0\n    for right in range(len(A)):\n        if A[right] == 0:\n            K -= 1\n        if K &lt; 0:\n            if A[left] == 0:\n                K += 1\n            left += 1\n\n    return right - left + 1\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0422\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.</p>"},{"location":"Sliding_Window_Dynamic_Size/#3-optimized-sliding-window","title":"3. \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e (Optimized Sliding Window)","text":"<p>\u0418\u0434\u0435\u044f: \u041e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u0443\u043b\u0435\u0439 \u0432 \u043e\u043a\u043d\u0435, \u0441\u0443\u0436\u0430\u044f \u043e\u043a\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u043f\u0440\u0435\u0432\u044b\u0448\u0435\u043d\u0438\u0438 <code>K</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u042f\u0432\u043d\u043e\u0435 \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u043d\u0443\u043b\u0435\u0439 \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u043b\u043e\u0433\u0438\u043a\u0443.</p> <pre><code>def longestOnes(A, K):\n    left = right = 0\n    zeros_count = 0\n\n    while right &lt; len(A):\n        if A[right] == 0:\n            zeros_count += 1\n\n        if zeros_count &gt; K:\n            if A[left] == 0:\n                zeros_count -= 1\n            left += 1\n\n        right += 1\n\n    return right - left\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u0434\u0432\u0443\u0445 \u0440\u0430\u0437.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0422\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.</p>"},{"location":"Sliding_Window_Fixed_Size/","title":"Sliding Window Fixed Size","text":""},{"location":"Sliding_Window_Fixed_Size/#1-643-i","title":"1. 643. \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432 I","text":""},{"location":"Sliding_Window_Fixed_Size/#_1","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code> \u0438 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e <code>k</code>, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0434\u043b\u0438\u043d\u043e\u0439 <code>k</code>.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [1,12,-5,-6,50,3], k = 4\n\u0412\u044b\u0445\u043e\u0434: 12.75\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432 [12,-5,-6,50] \u0438\u043c\u0435\u0435\u0442 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 (12 + (-5) + (-6) + 50) / 4 = 51 / 4 = 12.75.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [5], k = 1\n\u0412\u044b\u0445\u043e\u0434: 5.0\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= k &lt;= nums.length &lt;= 10^5</code> - <code>-10^4 &lt;= nums[i] &lt;= 10^4</code></p>"},{"location":"Sliding_Window_Fixed_Size/#_2","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Sliding_Window_Fixed_Size/#1-brute-force-approach","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force Approach)","text":"<p>\u0418\u0434\u0435\u044f: \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c \u0441\u0443\u043c\u043c\u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0434\u043b\u0438\u043d\u043e\u0439 <code>k</code> \u0438 \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0438\u0437-\u0437\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0445 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0439 \u0441\u0443\u043c\u043c.</p> <pre><code>def findMaxAverage(nums, k):\n    n = len(nums)\n    max_avg = float('-inf')\n\n    for i in range(n - k + 1):\n        current_sum = 0\n        for j in range(i, i + k):\n            current_sum += nums[j]\n        current_avg = current_sum / k\n        max_avg = max(max_avg, current_avg)\n\n    return max_avg\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n * k) - n \u2014 \u0434\u043b\u0438\u043d\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u0441\u0443\u043c\u043c\u0438\u0440\u0443\u0435\u043c k \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.</p>"},{"location":"Sliding_Window_Fixed_Size/#2-sliding-window-approach","title":"2. \u0421\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e (Sliding Window Approach)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430 <code>k</code>, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0445 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0439 \u0441\u0443\u043c\u043c.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u0438 \u0434\u0432\u0438\u0436\u0435\u043d\u0438\u0438 \u043e\u043a\u043d\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438 \u0432\u044b\u0447\u0438\u0442\u0430\u0435\u043c \u0441\u0442\u0430\u0440\u044b\u0439, \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u044f \u0441\u0443\u043c\u043c\u0443 \u0437\u0430 O(1).</p> <pre><code>def findMaxAverage(nums, k):\n    n = len(nums)\n    current_sum = sum(nums[:k])\n    max_sum = current_sum\n\n    for i in range(k, n):\n        current_sum += nums[i] - nums[i - k]\n        max_sum = max(max_sum, current_sum)\n\n    return max_sum / k\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443, \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u0437\u0430 O(k).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445.</p>"},{"location":"Sliding_Window_Fixed_Size/#2-438","title":"2. 438. \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435 \u0430\u043d\u0430\u0433\u0440\u0430\u043c\u043c\u044b \u0432 \u0441\u0442\u0440\u043e\u043a\u0435","text":""},{"location":"Sliding_Window_Fixed_Size/#_3","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u044b \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 <code>s</code> \u0438 <code>p</code>, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u0432\u0441\u0435 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a \u0432 <code>s</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0430\u043d\u0430\u0433\u0440\u0430\u043c\u043c\u0430\u043c\u0438 \u0441\u0442\u0440\u043e\u043a\u0438 <code>p</code>. \u0410\u043d\u0430\u0433\u0440\u0430\u043c\u043c\u0430 \u2014 \u044d\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0430, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0430\u044f \u0442\u0435 \u0436\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0441 \u0442\u043e\u0439 \u0436\u0435 \u0447\u0430\u0441\u0442\u043e\u0442\u043e\u0439, \u043d\u043e \u0432 \u043b\u044e\u0431\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: s = \"cbaebabacd\", p = \"abc\"\n\u0412\u044b\u0445\u043e\u0434: [0,6]\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438, \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 0 (\"cba\") \u0438 6 (\"bac\"), \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0430\u043d\u0430\u0433\u0440\u0430\u043c\u043c\u0430\u043c\u0438 \"abc\".\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: s = \"abab\", p = \"ab\"\n\u0412\u044b\u0445\u043e\u0434: [0,1,2]\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= s.length, p.length &lt;= 3 * 10^4</code> - <code>s</code> \u0438 <code>p</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b.</p>"},{"location":"Sliding_Window_Fixed_Size/#_4","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Sliding_Window_Fixed_Size/#1-brute-force-checking","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute-force Checking)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u0430\u0436\u0434\u0443\u044e \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0443 \u0434\u043b\u0438\u043d\u043e\u0439 <code>len(p)</code> \u0432 <code>s</code>, \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u044f \u0435\u0451 \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044f \u0441 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 <code>p</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u0438\u0437-\u0437\u0430 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438.</p> <pre><code>def findAnagrams(s, p):\n    result = []\n    sorted_p = sorted(p)\n\n    for i in range(len(s) - len(p) + 1):\n        substring = s[i:i+len(p)]\n        if sorted(substring) == sorted_p:\n            result.append(i)\n\n    return result\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O((n - m) * m * log m) - n \u2014 \u0434\u043b\u0438\u043d\u0430 <code>s</code>, m \u2014 \u0434\u043b\u0438\u043d\u0430 <code>p</code>, \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 O(m * log m).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(m) - \u0414\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 <code>p</code>.</p>"},{"location":"Sliding_Window_Fixed_Size/#2-sorting-and-hashmap","title":"2. \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0438 \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0430 (Sorting and HashMap)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0438 \u0447\u0430\u0441\u0442\u043e\u0442\u043d\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a \u0441 <code>p</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0427\u0430\u0441\u0442\u043e\u0442\u043d\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438, \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044f \u0447\u0430\u0441\u0442\u043e\u0442\u044b \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p> <pre><code>from collections import Counter\n\ndef findAnagrams(s, p):\n    result = []\n    p_count = Counter(p)\n    s_count = Counter(s[:len(p) - 1])\n\n    for i in range(len(p) - 1, len(s)):\n        s_count[s[i]] += 1\n        if s_count == p_count:\n            result.append(i - len(p) + 1)\n        s_count[s[i - len(p) + 1]] -= 1\n        if s_count[s[i - len(p) + 1]] == 0:\n            del s_count[s[i - len(p) + 1]]\n\n    return result\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e <code>s</code>, \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u043e \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u043c \u2014 O(1) \u0432 \u0441\u0440\u0435\u0434\u043d\u0435\u043c.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0420\u0430\u0437\u043c\u0435\u0440 \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0445 \u0431\u0443\u043a\u0432 (26).</p>"},{"location":"Sliding_Window_Fixed_Size/#3-efficient-sliding-window-with-hashmap","title":"3. \u042d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0435 \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0441 \u0445\u044d\u0448-\u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 (Efficient Sliding Window with HashMap)","text":"<p>\u0418\u0434\u0435\u044f: \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e, \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u044f \u0447\u0430\u0441\u0442\u043e\u0442\u043d\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0437\u0430 O(1) \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0438.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u043e\u0441\u0442\u0435\u043f\u0435\u043d\u043d\u043e\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f.</p> <pre><code>from collections import Counter\n\ndef findAnagrams(s, p):\n    result = []\n    p_count = Counter(p)\n    s_count = Counter()\n\n    for i in range(len(s)):\n        s_count[s[i]] += 1\n\n        if i &gt;= len(p):\n            if s_count[s[i - len(p)]] == 1:\n                del s_count[s[i - len(p)]]\n            else:\n                s_count[s[i - len(p)]] -= 1\n\n        if p_count == s_count:\n            result.append(i - len(p) + 1)\n\n    return result\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e <code>s</code>.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0424\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0441\u043b\u043e\u0432\u0430\u0440\u044f.</p>"},{"location":"Sliding_Window_Fixed_Size/#_5","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0441\u043e\u0431\u0435\u0441\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f","text":"<ul> <li>\u041e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435: \u042d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0435 \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0437\u0430 \u0441\u0447\u0435\u0442 O(n) \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0438 \u044f\u0441\u043d\u043e\u0441\u0442\u0438.</li> <li>\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u043a\u0430\u0436\u0438\u0442\u0435, \u043a\u0430\u043a \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0438 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u044e\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0430\u043d\u0430\u0433\u0440\u0430\u043c\u043c.</li> <li>\u041a\u0440\u0430\u0439\u043d\u0438\u0435 \u0441\u043b\u0443\u0447\u0430\u0438: \u041e\u0431\u0441\u0443\u0434\u0438\u0442\u0435 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 <code>p</code> \u0434\u043b\u0438\u043d\u043d\u0435\u0435 <code>s</code> \u0438\u043b\u0438 <code>s</code> \u043f\u0443\u0441\u0442\u0430\u044f.</li> <li>\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430: \u041f\u043e\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0443\u0439\u0442\u0435\u0441\u044c \u0432 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 Counter \u0438 \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0438\u043c \u043e\u043a\u043d\u043e\u043c.</li> </ul>"},{"location":"Sliding_Window_Fixed_Size/#3-567","title":"3. 567. \u041f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435","text":""},{"location":"Sliding_Window_Fixed_Size/#_6","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u044b \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 <code>s1</code> \u0438 <code>s2</code>, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043b\u0438 <code>s2</code> \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u043e\u0439 <code>s1</code> (\u0442.\u0435. \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0435 \u0436\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0441 \u0442\u043e\u0439 \u0436\u0435 \u0447\u0430\u0441\u0442\u043e\u0442\u043e\u0439).</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: s1 = \"ab\", s2 = \"eidbaooo\"\n\u0412\u044b\u0445\u043e\u0434: true\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \"ba\" (\u0438\u043d\u0434\u0435\u043a\u0441\u044b 3-4) \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u043e\u0439 \"ab\".\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: s1 = \"ab\", s2 = \"eidboaoo\"\n\u0412\u044b\u0445\u043e\u0434: false\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= s1.length, s2.length &lt;= 10^4</code> - <code>s1</code> \u0438 <code>s2</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b.</p>"},{"location":"Sliding_Window_Fixed_Size/#_7","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Sliding_Window_Fixed_Size/#1-generate-all-permutations","title":"1. \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0432\u0441\u0435\u0445 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043e\u043a (Generate All Permutations)","text":"<p>\u0418\u0434\u0435\u044f: \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c \u0432\u0441\u0435 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 <code>s1</code> \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043a\u0430\u043a\u0430\u044f-\u043b\u0438\u0431\u043e \u0438\u0437 \u043d\u0438\u0445 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 <code>s2</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439, \u043d\u043e \u043a\u0440\u0430\u0439\u043d\u0435 \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u0438\u0437-\u0437\u0430 \u0444\u0430\u043a\u0442\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438.</p> <pre><code>from itertools import permutations\n\ndef checkInclusion(s1: str, s2: str) -&gt; bool:\n    perm = permutations(s1)\n    for p in perm:\n        if ''.join(p) in s2:\n            return True\n    return False\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n! * m) - n \u2014 \u0434\u043b\u0438\u043d\u0430 <code>s1</code>, m \u2014 \u0434\u043b\u0438\u043d\u0430 <code>s2</code>, \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043e\u043a \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 O(n!).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n!) - \u0414\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043e\u043a.</p>"},{"location":"Sliding_Window_Fixed_Size/#2-sliding-window-with-character-count-comparison","title":"2. \u0421\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0441 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435\u043c \u0447\u0430\u0441\u0442\u043e\u0442 (Sliding Window with Character Count Comparison)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0434\u043b\u0438\u043d\u043e\u0439 <code>len(s1)</code> \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0447\u0430\u0441\u0442\u043e\u0442\u044b \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0441 <code>s1</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0427\u0430\u0441\u0442\u043e\u0442\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u043e\u0439.</p> <pre><code>def checkInclusion(s1: str, s2: str) -&gt; bool:\n    if len(s1) &gt; len(s2):\n        return False\n\n    s1_count = [0] * 26\n    s2_count = [0] * 26\n\n    for i in range(len(s1)):\n        s1_count[ord(s1[i]) - ord('a')] += 1\n        s2_count[ord(s2[i]) - ord('a')] += 1\n\n    def matches(s1_count, s2_count):\n        return s1_count == s2_count\n\n    for i in range(len(s1), len(s2)):\n        if matches(s1_count, s2_count):\n            return True\n        s2_count[ord(s2[i]) - ord('a')] += 1\n        s2_count[ord(s2[i - len(s1)]) - ord('a')] -= 1\n\n    return matches(s1_count, s2_count)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(l + m) - l \u2014 \u0434\u043b\u0438\u043d\u0430 <code>s1</code>, m \u2014 \u0434\u043b\u0438\u043d\u0430 <code>s2</code>, \u043e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e <code>s2</code>.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0424\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 (26).</p>"},{"location":"Sliding_Window_Fixed_Size/#_8","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0441\u043e\u0431\u0435\u0441\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u044f","text":"<ul> <li>\u041e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435: \u0421\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0441 \u0447\u0430\u0441\u0442\u043e\u0442\u0430\u043c\u0438 \u0437\u0430 \u0441\u0447\u0435\u0442 O(n) \u0432\u0440\u0435\u043c\u0435\u043d\u0438.</li> <li>\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041e\u0431\u044a\u044f\u0441\u043d\u0438\u0442\u0435, \u043a\u0430\u043a \u0447\u0430\u0441\u0442\u043e\u0442\u043d\u044b\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u0437\u0430\u043c\u0435\u043d\u044f\u044e\u0442 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438.</li> <li>\u041a\u0440\u0430\u0439\u043d\u0438\u0435 \u0441\u043b\u0443\u0447\u0430\u0438: \u041e\u0431\u0441\u0443\u0434\u0438\u0442\u0435 \u0441\u043b\u0443\u0447\u0430\u0438, \u043a\u043e\u0433\u0434\u0430 <code>s1</code> \u0434\u043b\u0438\u043d\u043d\u0435\u0435 <code>s2</code> \u0438\u043b\u0438 <code>s2</code> \u043f\u0443\u0441\u0442\u0430\u044f.</li> <li>\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430: \u041f\u043e\u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0443\u0439\u0442\u0435\u0441\u044c \u0432 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0433\u043e \u043e\u043a\u043d\u0430 \u0441 \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u043c\u0438.</li> </ul>"},{"location":"Sliding_Window_Fixed_Size/#4-2461-k","title":"4. 2461. \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 \u0434\u043b\u0438\u043d\u043e\u0439 K","text":""},{"location":"Sliding_Window_Fixed_Size/#_9","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code> \u0438 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e <code>k</code>, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0443\u043c\u043c\u0443 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0434\u043b\u0438\u043d\u043e\u0439 <code>k</code>, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [1,5,4,2,9,9,9], k = 3\n\u0412\u044b\u0445\u043e\u0434: 15\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432 [5,4,2] \u0438\u043c\u0435\u0435\u0442 \u0441\u0443\u043c\u043c\u0443 15, \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = [4,4,4], k = 3\n\u0412\u044b\u0445\u043e\u0434: 0\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041d\u0435\u0442 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0441 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c\u0438.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= k &lt;= nums.length &lt;= 10^5</code> - <code>1 &lt;= nums[i] &lt;= 10^9</code></p>"},{"location":"Sliding_Window_Fixed_Size/#_10","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Sliding_Window_Fixed_Size/#1-brute-force-approach_1","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force Approach)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u0438\u043d\u043e\u0439 <code>k</code>, \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u0443\u043c\u043c\u0443, \u0435\u0441\u043b\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0438\u0437-\u0437\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0430.</p> <pre><code>def maxSumOfDistinctSubarray(nums, k):\n    n = len(nums)\n    max_sum = 0\n\n    for i in range(n - k + 1):\n        current_window = nums[i:i+k]\n        if len(set(current_window)) == k:\n            current_sum = sum(current_window)\n            max_sum = max(max_sum, current_sum)\n\n    return max_sum\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n * k) - \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0438 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c \u0441\u0443\u043c\u043c\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(k) - \u0414\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430.</p>"},{"location":"Sliding_Window_Fixed_Size/#2-sliding-window-set-approach","title":"2. \u0421\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0441 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e\u043c (Sliding Window + Set Approach)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043a\u043e\u043b\u044c\u0437\u044f\u0449\u0435\u0435 \u043e\u043a\u043d\u043e \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430 <code>k</code> \u0438 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0434\u043b\u044f \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u044b, \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044f \u043e\u043a\u043d\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430 <code>k</code>.</p> <pre><code>def maxSumOfDistinctSubarray(nums, k):\n    n = len(nums)\n    max_sum = 0\n    current_sum = 0\n    current_set = set()\n    left = 0\n\n    for right in range(n):\n        while nums[right] in current_set:\n            current_set.remove(nums[left])\n            current_sum -= nums[left]\n            left += 1\n\n        current_set.add(nums[right])\n        current_sum += nums[right]\n\n        if right - left + 1 == k:\n            max_sum = max(max_sum, current_sum)\n            current_set.remove(nums[left])\n            current_sum -= nums[left]\n            left += 1\n\n    return max_sum\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041a\u0430\u0436\u0434\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438 \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u0430.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(k) - \u0414\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430.</p>"},{"location":"Strings/","title":"Strings","text":""},{"location":"Strings/#1-392","title":"1. 392. \u042f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e","text":""},{"location":"Strings/#_1","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u044b \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 <code>s</code> \u0438 <code>t</code>, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 <code>s</code> \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e <code>t</code>. \u0421\u0442\u0440\u043e\u043a\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u0434\u0440\u0443\u0433\u043e\u0439, \u0435\u0441\u043b\u0438 \u0432\u0441\u0435 \u0435\u0451 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0432 \u0442\u043e\u0439 \u0436\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435, \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u0434\u0440\u044f\u0434.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: s = \"abc\", t = \"ahbgdc\"\n\u0412\u044b\u0445\u043e\u0434: true\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0421\u0438\u043c\u0432\u043e\u043b\u044b 'a', 'b', 'c' \u043f\u043e\u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 t \u0432 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: s = \"axc\", t = \"ahbgdc\"\n\u0412\u044b\u0445\u043e\u0434: false\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0421\u0438\u043c\u0432\u043e\u043b 'x' \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 t, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 s \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 3:\n\u0412\u0445\u043e\u0434: s = \"\", t = \"ahbgdc\"\n\u0412\u044b\u0445\u043e\u0434: true\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u043b\u044e\u0431\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>0 &lt;= s.length &lt;= 100</code> - <code>0 &lt;= t.length &lt;= 10^4</code> - \u0421\u0442\u0440\u043e\u043a\u0438 \u0441\u043e\u0441\u0442\u043e\u044f\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0445 \u0431\u0443\u043a\u0432.</p> <p>\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0435: - \u041c\u043e\u0436\u043d\u043e \u043b\u0438 \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 <code>s</code> \u043d\u0430 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 <code>t</code>?</p>"},{"location":"Strings/#_2","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Strings/#1-two-pointer-approach","title":"1. \u0414\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f (Two Pointer Approach)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f: \u043e\u0434\u0438\u043d \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438 <code>s</code>, \u0434\u0440\u0443\u0433\u043e\u0439 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0438 <code>t</code>. \u0415\u0441\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442, \u043f\u0440\u043e\u0434\u0432\u0438\u0433\u0430\u0435\u043c \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c <code>s</code>. \u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c <code>t</code> \u0434\u0432\u0438\u0436\u0435\u0442\u0441\u044f \u0432\u0441\u0435\u0433\u0434\u0430.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0415\u0441\u043b\u0438 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0440\u043e\u0439\u0442\u0438 \u0432\u0441\u044e \u0441\u0442\u0440\u043e\u043a\u0443 <code>s</code>, \u043d\u0430\u0445\u043e\u0434\u044f \u0435\u0451 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 <code>t</code> \u0432 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435, \u0442\u043e <code>s</code> \u2014 \u043f\u043e\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c.</p> <pre><code>def isSubsequence(s: str, t: str) -&gt; bool:\n    pointer_s, pointer_t = 0, 0\n\n    while pointer_s &lt; len(s) and pointer_t &lt; len(t):\n        if s[pointer_s] == t[pointer_t]:\n            pointer_s += 1\n        pointer_t += 1\n\n    return pointer_s == len(s)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - n \u2014 \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 <code>t</code>, \u0442\u0430\u043a \u043a\u0430\u043a \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u043d\u0435\u0439 \u043e\u0434\u0438\u043d \u0440\u0430\u0437.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f.</p>"},{"location":"Strings/#2-follow-up-binary-search","title":"2. \u0411\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u0434\u043b\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 (Follow-up: Binary Search)","text":"<p>\u0418\u0434\u0435\u044f: \u0414\u043b\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 <code>t</code> \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u0434\u043b\u044f \u043d\u0430\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 <code>t</code> \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0431\u044b\u0441\u0442\u0440\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0447\u0442\u043e \u0443\u0441\u043a\u043e\u0440\u044f\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0434\u043b\u044f \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 \u0441\u0442\u0440\u043e\u043a <code>s</code>.</p> <pre><code>from bisect import bisect_left\nfrom collections import defaultdict\n\ndef isSubsequence(s: str, t: str) -&gt; bool:\n    char_indices = defaultdict(list)\n    for index, char in enumerate(t):\n        char_indices[char].append(index)\n\n    prev_index = -1\n    for char in s:\n        indices = char_indices[char]\n        position = bisect_left(indices, prev_index + 1)\n        if position == len(indices):\n            return False\n        prev_index = indices[position]\n\n    return True\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: - \u041f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430: O(n), \u0433\u0434\u0435 n \u2014 \u0434\u043b\u0438\u043d\u0430 <code>t</code>. - \u0417\u0430\u043f\u0440\u043e\u0441: O(m log k), \u0433\u0434\u0435 m \u2014 \u0434\u043b\u0438\u043d\u0430 <code>s</code>, k \u2014 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u0432 <code>t</code>.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0425\u0440\u0430\u043d\u0438\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 <code>t</code> \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435.</p>"},{"location":"Strings/#2-125","title":"2. 125. \u0412\u0430\u043b\u0438\u0434\u043d\u044b\u0439 \u043f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c","text":""},{"location":"Strings/#_3","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 <code>s</code>, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043e\u043d\u0430 \u043f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c\u043e\u043c, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0443\u043a\u0432\u0435\u043d\u043d\u043e-\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0438 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440. \u041f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c \u2014 \u044d\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e \u0441\u043b\u0435\u0432\u0430 \u043d\u0430\u043f\u0440\u0430\u0432\u043e \u0438 \u0441\u043f\u0440\u0430\u0432\u0430 \u043d\u0430\u043b\u0435\u0432\u043e.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: s = \"A man, a plan, a canal: Panama\"\n\u0412\u044b\u0445\u043e\u0434: true\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0441\u043b\u0435 \u043e\u0447\u0438\u0441\u0442\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \"amanaplanacanalpanama\", \u0447\u0442\u043e \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c\u043e\u043c.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: s = \"race a car\"\n\u0412\u044b\u0445\u043e\u0434: false\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041f\u043e\u0441\u043b\u0435 \u043e\u0447\u0438\u0441\u0442\u043a\u0438 \u2014 \"raceacar\", \u043d\u0435 \u043f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= s.length &lt;= 2 * 10^5</code> - \u0421\u0442\u0440\u043e\u043a\u0430 <code>s</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 ASCII-\u0441\u0438\u043c\u0432\u043e\u043b\u044b.</p>"},{"location":"Strings/#_4","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Strings/#1-two-pointer-with-string-builder","title":"1. \u0414\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438 (Two-Pointer with String Builder)","text":"<p>\u0418\u0434\u0435\u044f: \u041e\u0447\u0438\u0449\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u043e\u0442 \u043d\u0435\u0430\u043b\u0444\u0430\u0432\u0438\u0442\u043d\u043e-\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u043c \u043a \u043d\u0438\u0436\u043d\u0435\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0443, \u0437\u0430\u0442\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0434\u0432\u0443\u0445 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0435\u0439.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u0435\u0434\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0441 \u043e\u0431\u043e\u0438\u0445 \u043a\u043e\u043d\u0446\u043e\u0432.</p> <pre><code>def isPalindrome(s: str) -&gt; bool:\n    filtered_chars = [char.lower() for char in s if char.isalnum()]\n\n    left, right = 0, len(filtered_chars) - 1\n\n    while left &lt; right:\n        if filtered_chars[left] != filtered_chars[right]:\n            return False\n        left, right = left + 1, right - 1\n\n    return True\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u0434\u043b\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438, \u043e\u0434\u0438\u043d \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c\u0430.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0425\u0440\u0430\u043d\u0438\u043c \u043e\u0447\u0438\u0449\u0435\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443.</p>"},{"location":"Strings/#2","title":"2. \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0434\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f (\u0431\u0435\u0437 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435, \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u044f \u043d\u0435\u0430\u043b\u0444\u0430\u0432\u0438\u0442\u043d\u043e-\u0446\u0438\u0444\u0440\u043e\u0432\u044b\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0423\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438 \u0434\u0432\u0438\u0436\u0443\u0442\u0441\u044f \u043d\u0430\u0432\u0441\u0442\u0440\u0435\u0447\u0443 \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0443, \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u044f \u043d\u0435\u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b, \u0447\u0442\u043e \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0442 \u043f\u0430\u043c\u044f\u0442\u044c.</p> <pre><code>def isPalindrome(s: str) -&gt; bool:\n    left, right = 0, len(s) - 1\n\n    while left &lt; right:\n        while left &lt; right and not s[left].isalnum():\n            left += 1\n        while left &lt; right and not s[right].isalnum():\n            right -= 1\n\n        if s[left].lower() != s[right].lower():\n            return False\n\n        left += 1\n        right -= 1\n\n    return True\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041a\u0430\u0436\u0434\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u0434\u0432\u0443\u0445 \u0440\u0430\u0437.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438.</p>"},{"location":"Strings/#3-14","title":"3. 14. \u041d\u0430\u0438\u0434\u043b\u0438\u043d\u043d\u0435\u0439\u0448\u0438\u0439 \u043e\u0431\u0449\u0438\u0439 \u043f\u0440\u0435\u0444\u0438\u043a\u0441","text":""},{"location":"Strings/#_5","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0442\u0440\u043e\u043a <code>strs</code>, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u043d\u0430\u0438\u0434\u043b\u0438\u043d\u043d\u0435\u0439\u0448\u0438\u0439 \u043e\u0431\u0449\u0438\u0439 \u043f\u0440\u0435\u0444\u0438\u043a\u0441 \u0441\u0440\u0435\u0434\u0438 \u0432\u0441\u0435\u0445 \u0441\u0442\u0440\u043e\u043a. \u0415\u0441\u043b\u0438 \u043e\u0431\u0449\u0435\u0433\u043e \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430 \u043d\u0435\u0442, \u0432\u0435\u0440\u043d\u0438\u0442\u0435 \u043f\u0443\u0441\u0442\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: strs = [\"flower\",\"flow\",\"flight\"]\n\u0412\u044b\u0445\u043e\u0434: \"fl\"\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \"fl\" \u2014 \u043e\u0431\u0449\u0438\u0439 \u043f\u0440\u0435\u0444\u0438\u043a\u0441 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0441\u0442\u0440\u043e\u043a.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: strs = [\"dog\",\"racecar\",\"car\"]\n\u0412\u044b\u0445\u043e\u0434: \"\"\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041d\u0435\u0442 \u043e\u0431\u0449\u0435\u0433\u043e \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= strs.length &lt;= 200</code> - <code>0 &lt;= strs[i].length &lt;= 200</code> - \u0421\u0442\u0440\u043e\u043a\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0435 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b.</p>"},{"location":"Strings/#_6","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Strings/#1-horizontal-scanning","title":"1. \u0413\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043a\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 (Horizontal Scanning)","text":"<p>\u0418\u0434\u0435\u044f: \u0411\u0435\u0440\u0435\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u043a\u0430\u043a \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u0435\u0444\u0438\u043a\u0441 \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0441 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c\u0438, \u0443\u043a\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u044f \u043f\u0440\u0435\u0444\u0438\u043a\u0441 \u043f\u0440\u0438 \u043d\u0435\u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0438.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u043e\u0441\u0442\u0435\u043f\u0435\u043d\u043d\u043e \u0441\u043e\u043a\u0440\u0430\u0449\u0430\u0435\u043c \u043f\u0440\u0435\u0444\u0438\u043a\u0441, \u043f\u043e\u043a\u0430 \u043e\u043d \u043d\u0435 \u0441\u0442\u0430\u043d\u0435\u0442 \u043e\u0431\u0449\u0438\u043c \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0441\u0442\u0440\u043e\u043a.</p> <pre><code>def longestCommonPrefix(strs):\n    if not strs:\n        return \"\"\n\n    prefix = strs[0]\n\n    for s in strs[1:]:\n        while not s.startswith(prefix):\n            prefix = prefix[:-1]\n            if not prefix:\n                return \"\"\n\n    return prefix\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(S) - S \u2014 \u0441\u0443\u043c\u043c\u0430 \u0434\u043b\u0438\u043d \u0432\u0441\u0435\u0445 \u0441\u0442\u0440\u043e\u043a, \u0442\u0430\u043a \u043a\u0430\u043a \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043f\u0440\u0435\u0444\u0438\u043a\u0441 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430.</p>"},{"location":"Strings/#2-vertical-scanning","title":"2. \u0412\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043a\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 (Vertical Scanning)","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043d\u0430 \u043e\u0434\u043d\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0432\u043e \u0432\u0441\u0435\u0445 \u0441\u0442\u0440\u043e\u043a\u0430\u0445, \u043f\u043e\u043a\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043c \u043d\u0435\u0441\u043e\u0432\u043f\u0430\u0434\u0435\u043d\u0438\u0435.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043f\u0440\u0435\u0444\u0438\u043a\u0441 \u043e\u0431\u0449\u0438\u0439, \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043f\u043e \u043f\u043e\u0437\u0438\u0446\u0438\u044f\u043c.</p> <pre><code>def longestCommonPrefix(strs):\n    if not strs:\n        return \"\"\n\n    for i in range(len(strs[0])):\n        char = strs[0][i]\n        for s in strs[1:]:\n            if i &gt;= len(s) or s[i] != char:\n                return strs[0][:i]\n\n    return strs[0]\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(S) - S \u2014 \u0441\u0443\u043c\u043c\u0430 \u0434\u043b\u0438\u043d \u0432\u0441\u0435\u0445 \u0441\u0442\u0440\u043e\u043a.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0411\u0435\u0437 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.</p>"},{"location":"Strings/#3-divide-and-conquer","title":"3. \u0420\u0430\u0437\u0434\u0435\u043b\u044f\u0439 \u0438 \u0432\u043b\u0430\u0441\u0442\u0432\u0443\u0439 (Divide and Conquer)","text":"<p>\u0418\u0434\u0435\u044f: \u0414\u0435\u043b\u0438\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0442\u0440\u043e\u043a \u043d\u0430 \u0434\u0432\u0435 \u0447\u0430\u0441\u0442\u0438, \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u044b \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439, \u0437\u0430\u0442\u0435\u043c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0420\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e\u0435 \u0440\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0435 \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0443, \u043d\u0430\u0445\u043e\u0434\u044f \u043e\u0431\u0449\u0438\u0439 \u043f\u0440\u0435\u0444\u0438\u043a\u0441 \u0434\u043b\u044f \u043f\u043e\u0434\u0433\u0440\u0443\u043f\u043f.</p> <pre><code>def longestCommonPrefix(strs):\n    if not strs:\n        return \"\"\n\n    def common_prefix(left, right):\n        min_len = min(len(left), len(right))\n        for i in range(min_len):\n            if left[i] != right[i]:\n                return left[:i]\n        return left[:min_len]\n\n    def longest_common_prefix_recursive(l, r):\n        if l == r:\n            return strs[l]\n        mid = (l + r) // 2\n        lcp_left = longest_common_prefix_recursive(l, mid)\n        lcp_right = longest_common_prefix_recursive(mid + 1, r)\n        return common_prefix(lcp_left, lcp_right)\n\n    return longest_common_prefix_recursive(0, len(strs) - 1)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(S) - S \u2014 \u0441\u0443\u043c\u043c\u0430 \u0434\u043b\u0438\u043d \u0432\u0441\u0435\u0445 \u0441\u0442\u0440\u043e\u043a.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(m * log n) - m \u2014 \u0434\u043b\u0438\u043d\u0430 \u043a\u0440\u0430\u0442\u0447\u0430\u0439\u0448\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438, n \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a, \u0438\u0437-\u0437\u0430 \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e\u0433\u043e \u0441\u0442\u0435\u043a\u0430.</p>"},{"location":"Strings/#4-binary-search","title":"4. \u0411\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a (Binary Search)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u0438\u043d\u044b \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044f, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0440\u0435\u0444\u0438\u043a\u0441 \u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b \u043e\u0431\u0449\u0438\u043c.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0411\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u0434\u043b\u0438\u043d\u0435 \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430 \u0441\u043e\u043a\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u043e\u043a.</p> <pre><code>def longestCommonPrefix(strs):\n    if not strs:\n        return \"\"\n\n    min_length = min(len(s) for s in strs)\n\n    def is_common_prefix(length):\n        prefix = strs[0][:length]\n        return all(s.startswith(prefix) for s in strs[1:])\n\n    low, high = 0, min_length\n    while low &lt;= high:\n        mid = (low + high) // 2\n        if is_common_prefix(mid):\n            low = mid + 1\n        else:\n            high = mid - 1\n\n    return strs[0][:(low + high) // 2]\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(S * log minLen) - S \u2014 \u0441\u0443\u043c\u043c\u0430 \u0434\u043b\u0438\u043d \u0432\u0441\u0435\u0445 \u0441\u0442\u0440\u043e\u043a, minLen \u2014 \u0434\u043b\u0438\u043d\u0430 \u043a\u0440\u0430\u0442\u0447\u0430\u0439\u0448\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0411\u0435\u0437 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.</p>"},{"location":"Strings/#4-6-","title":"4. 6. \u0417\u0438\u0433\u0437\u0430\u0433-\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435","text":""},{"location":"Strings/#_7","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 <code>s</code> \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a <code>numRows</code>. \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0439\u0442\u0435 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0437\u0438\u0433\u0437\u0430\u0433-\u0443\u0437\u043e\u0440, \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u044f \u0435\u0451 \u043f\u043e \u0441\u0442\u0440\u043e\u043a\u0430\u043c, \u0430 \u0437\u0430\u0442\u0435\u043c \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: s = \"PAYPALISHIRING\", numRows = 3\n\u0412\u044b\u0445\u043e\u0434: \"PAHNAPLSIHRYING\"\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435:\nP   A   H   N\nA P L S I I G\nY   I   R\n\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0447\u0442\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e: \"PAHNAPLSIHRYING\"\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: s = \"PAYPALISHIRING\", numRows = 4\n\u0412\u044b\u0445\u043e\u0434: \"PINALSIGYAHRPI\"\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435:\nP     I    N\nA   L S  I G\nY A   H R\nP     I\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= s.length &lt;= 1000</code> - <code>1 &lt;= numRows &lt;= 1000</code> - \u0421\u0442\u0440\u043e\u043a\u0430 <code>s</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b, \u0437\u0430\u043f\u044f\u0442\u044b\u0435 \u0438 \u0442\u043e\u0447\u043a\u0438.</p>"},{"location":"Strings/#_8","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Strings/#1-simulate-zigzag-pattern","title":"1. \u0421\u0438\u043c\u0443\u043b\u044f\u0446\u0438\u044f \u0437\u0438\u0433\u0437\u0430\u0433-\u0443\u0437\u043e\u0440\u0430 (Simulate Zigzag Pattern)","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u0438\u043c\u0443\u043b\u0438\u0440\u0443\u0435\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0437\u0430\u043f\u0438\u0441\u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0438 \u0437\u0438\u0433\u0437\u0430\u0433-\u0443\u0437\u043e\u0440\u0430, \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u044f \u0442\u0435\u043a\u0443\u0449\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0438 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0435\u0440\u0435\u043c\u0435\u0449\u0430\u0435\u043c\u0441\u044f \u0432\u043d\u0438\u0437 \u0438 \u0432\u0432\u0435\u0440\u0445 \u043f\u043e \u0441\u0442\u0440\u043e\u043a\u0430\u043c, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438.</p> <pre><code>def convert(s: str, numRows: int) -&gt; str:\n    if numRows == 1 or numRows &gt;= len(s):\n        return s\n\n    rows = [''] * numRows\n    current_row, step = 0, 1\n\n    for char in s:\n        rows[current_row] += char\n        if current_row == 0:\n            step = 1\n        elif current_row == numRows - 1:\n            step = -1\n        current_row += step\n\n    return ''.join(rows)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - n \u2014 \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438, \u043e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0425\u0440\u0430\u043d\u0438\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0441\u0442\u0440\u043e\u043a.</p>"},{"location":"Strings/#2-cycle-calculation","title":"2. \u041e\u043f\u0442\u0438\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0441 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435\u043c \u0446\u0438\u043a\u043b\u0430 (Cycle Calculation)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044e\u0449\u0438\u0439\u0441\u044f \u0446\u0438\u043a\u043b \u0437\u0438\u0433\u0437\u0430\u0433\u0430 \u0434\u043b\u044f \u043f\u0440\u044f\u043c\u043e\u0433\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u0437\u0438\u0446\u0438\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041a\u0430\u0436\u0434\u044b\u0439 \u0446\u0438\u043a\u043b \u0434\u043b\u0438\u043d\u043e\u0439 <code>2 * numRows - 2</code> \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u043a\u0430\u043a\u0438\u0435 \u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043f\u043e\u043f\u0430\u0434\u0430\u044e\u0442 \u0432 \u043a\u0430\u0436\u0434\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443.</p> <pre><code>def convert(s: str, numRows: int) -&gt; str:\n    if numRows == 1 or numRows &gt;= len(s):\n        return s\n\n    result = []\n    cycle_len = 2 * numRows - 2\n\n    for i in range(numRows):\n        for j in range(i, len(s), cycle_len):\n            result.append(s[j])\n            if i != 0 and i != numRows - 1 and j + cycle_len - 2 * i &lt; len(s):\n                result.append(s[j + cycle_len - 2 * i])\n\n    return ''.join(result)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041a\u0430\u0436\u0434\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u0438\u043d \u0440\u0430\u0437.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0425\u0440\u0430\u043d\u0438\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435.</p>"},{"location":"Strings/#5-151","title":"5. 151. \u0420\u0430\u0437\u0432\u043e\u0440\u043e\u0442 \u0441\u043b\u043e\u0432 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435","text":""},{"location":"Strings/#_9","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 <code>s</code>, \u043f\u0435\u0440\u0435\u0432\u0435\u0440\u043d\u0438\u0442\u0435 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0441\u043b\u043e\u0432 \u0432 \u043d\u0435\u0439. \u0421\u043b\u043e\u0432\u043e \u2014 \u044d\u0442\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0431\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432. \u0423\u0434\u0430\u043b\u0438\u0442\u0435 \u043b\u0438\u0448\u043d\u0438\u0435 \u043f\u0440\u043e\u0431\u0435\u043b\u044b, \u0447\u0442\u043e\u0431\u044b \u0441\u043b\u043e\u0432\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u043b\u0438\u0441\u044c \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u043d\u0438\u043c \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c, \u0431\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432 \u0432 \u043d\u0430\u0447\u0430\u043b\u0435 \u0438 \u043a\u043e\u043d\u0446\u0435.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: s = \"the sky is blue\"\n\u0412\u044b\u0445\u043e\u0434: \"blue is sky the\"\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: s = \"  hello world  \"\n\u0412\u044b\u0445\u043e\u0434: \"world hello\"\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041b\u0438\u0448\u043d\u0438\u0435 \u043f\u0440\u043e\u0431\u0435\u043b\u044b \u0443\u0434\u0430\u043b\u0435\u043d\u044b.\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>1 &lt;= s.length &lt;= 10^4</code> - \u0421\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b, \u0446\u0438\u0444\u0440\u044b \u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u044b. - \u0425\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u043d\u043e \u0441\u043b\u043e\u0432\u043e \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442.</p>"},{"location":"Strings/#_10","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Strings/#1-built-in-split-and-reverse","title":"1. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 (Built-in Split and Reverse)","text":"<p>\u0418\u0434\u0435\u044f: \u0420\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u043d\u0430 \u0441\u043b\u043e\u0432\u0430, \u043f\u0435\u0440\u0435\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0438\u0445 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0441 \u043e\u0434\u043d\u0438\u043c \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b Python \u0443\u043f\u0440\u043e\u0449\u0430\u044e\u0442 \u0437\u0430\u0434\u0430\u0447\u0443, \u043d\u043e \u0442\u0440\u0435\u0431\u0443\u044e\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.</p> <pre><code>def reverseWords(s: str) -&gt; str:\n    words = s.split()\n    reversed_words = words[::-1]\n    return ' '.join(reversed_words)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - n \u2014 \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438, \u0434\u043b\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u044f, \u0440\u0430\u0437\u0432\u043e\u0440\u043e\u0442\u0430 \u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0425\u0440\u0430\u043d\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043b\u043e\u0432.</p>"},{"location":"Strings/#2-in-place-reversal","title":"2. \u0420\u0430\u0437\u0432\u043e\u0440\u043e\u0442 \u043d\u0430 \u043c\u0435\u0441\u0442\u0435 (In-place Reversal)","text":"<p>\u0418\u0434\u0435\u044f: \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043b\u0438\u0448\u043d\u0438\u0435 \u043f\u0440\u043e\u0431\u0435\u043b\u044b, \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0440\u0430\u0437\u0432\u043e\u0440\u0430\u0447\u0438\u0432\u0430\u0435\u043c \u0432\u0435\u0441\u044c \u0441\u043f\u0438\u0441\u043e\u043a, \u0437\u0430\u0442\u0435\u043c \u043a\u0430\u0436\u0434\u043e\u0435 \u0441\u043b\u043e\u0432\u043e.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0420\u0430\u0437\u0432\u043e\u0440\u043e\u0442\u044b \u043d\u0430 \u043c\u0435\u0441\u0442\u0435 \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u044e\u0442 \u043f\u0430\u043c\u044f\u0442\u044c, \u043d\u043e \u0442\u0440\u0435\u0431\u0443\u044e\u0442 \u0430\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c\u0438.</p> <pre><code>def reverseWords(s: str) -&gt; str:\n    def reverse_list(chars, start, end):\n        while start &lt; end:\n            chars[start], chars[end] = chars[end], chars[start]\n            start, end = start + 1, end - 1\n\n    char_list = list(s.strip())\n    reverse_list(char_list, 0, len(char_list) - 1)\n\n    n = len(char_list)\n    start = 0\n    while start &lt; n:\n        while start &lt; n and char_list[start] == ' ':\n            start += 1\n        end = start\n        while end &lt; n and char_list[end] != ' ':\n            end += 1\n        reverse_list(char_list, start, end - 1)\n        start = end\n\n    return ' '.join(''.join(char_list).split())\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0445\u043e\u0434\u043e\u0432 \u043f\u043e \u0441\u0442\u0440\u043e\u043a\u0435.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u0412 Python \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0435\u0438\u0437\u043c\u0435\u043d\u044f\u0435\u043c\u044b, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.</p>"},{"location":"Two_Pointers/","title":"Two Pointers","text":""},{"location":"Two_Pointers/#1-88","title":"1. 88. \u0421\u043b\u0438\u044f\u043d\u0438\u0435 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432","text":""},{"location":"Two_Pointers/#_1","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d\u044b \u0434\u0432\u0430 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums1</code> \u0438 <code>nums2</code> \u0434\u043b\u0438\u043d\u043e\u0439 <code>m</code> \u0438 <code>n</code> \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043c\u0430\u0441\u0441\u0438\u0432 <code>nums1</code> \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043c\u0435\u0441\u0442\u043e\u043c \u0434\u043b\u044f \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432. \u0421\u043b\u0435\u0439\u0442\u0435 <code>nums2</code> \u0432 <code>nums1</code>, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d \u0432 <code>nums1</code>.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3\n\u0412\u044b\u0445\u043e\u0434: [1,2,2,3,5,6]\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0421\u043b\u0438\u0432\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u044b, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0443.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums1 = [1], m = 1, nums2 = [], n = 0\n\u0412\u044b\u0445\u043e\u0434: [1]\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>nums1.length == m + n</code> - <code>nums2.length == n</code> - <code>0 &lt;= m, n &lt;= 200</code> - <code>-10^9 &lt;= nums1[i], nums2[i] &lt;= 10^9</code></p>"},{"location":"Two_Pointers/#_2","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Two_Pointers/#1-naive-two-pointer-approach","title":"1. \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u0441 \u0434\u0432\u0443\u043c\u044f \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f\u043c\u0438 (Naive Two-Pointer Approach)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0438\u0437 <code>nums1</code> \u0438 <code>nums2</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0414\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u043f\u043e\u0440\u044f\u0434\u043e\u043a, \u043d\u043e \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043f\u0430\u043c\u044f\u0442\u044c.</p> <pre><code>def merge(nums1, m, nums2, n):\n    merged = []\n    i, j = 0, 0\n\n    while i &lt; m and j &lt; n:\n        if nums1[i] &lt; nums2[j]:\n            merged.append(nums1[i])\n            i += 1\n        else:\n            merged.append(nums2[j])\n            j += 1\n\n    while i &lt; m:\n        merged.append(nums1[i])\n        i += 1\n\n    while j &lt; n:\n        merged.append(nums2[j])\n        j += 1\n\n    for k in range(m + n):\n        nums1[k] = merged[k]\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(m + n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043e\u0431\u043e\u0438\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u043c.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(m + n) - \u0414\u043b\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430.</p>"},{"location":"Two_Pointers/#2-in-place-merge-with-extra-storage","title":"2. \u0421\u043b\u0438\u044f\u043d\u0438\u0435 \u043d\u0430 \u043c\u0435\u0441\u0442\u0435 \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u044c\u044e (In-place Merge with Extra Storage)","text":"<p>\u0418\u0434\u0435\u044f: \u041a\u043e\u043f\u0438\u0440\u0443\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b <code>nums1</code> \u0432\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u0438 \u0441\u043b\u0438\u0432\u0430\u0435\u043c \u0435\u0433\u043e \u0441 <code>nums2</code> \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u0432 <code>nums1</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0423\u043c\u0435\u043d\u044c\u0448\u0430\u0435\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u043f\u0430\u043c\u044f\u0442\u044c \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u043f\u0435\u0440\u0432\u044b\u043c \u043f\u043e\u0434\u0445\u043e\u0434\u043e\u043c.</p> <pre><code>def merge(nums1, m, nums2, n):\n    nums1_copy = nums1[:m]\n    p1, p2, k = 0, 0, 0\n\n    while p1 &lt; m and p2 &lt; n:\n        if nums1_copy[p1] &lt; nums2[p2]:\n            nums1[k] = nums1_copy[p1]\n            p1 += 1\n        else:\n            nums1[k] = nums2[p2]\n            p2 += 1\n        k += 1\n\n    while p1 &lt; m:\n        nums1[k] = nums1_copy[p1]\n        p1 += 1\n        k += 1\n\n    while p2 &lt; n:\n        nums1[k] = nums2[p2]\n        p2 += 1\n        k += 1\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(m + n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u043c.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(m) - \u0414\u043b\u044f \u043a\u043e\u043f\u0438\u0438 \u043f\u0435\u0440\u0432\u044b\u0445 <code>m</code> \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 <code>nums1</code>.</p>"},{"location":"Two_Pointers/#3-optimal-in-place-merge-from-the-end","title":"3. \u041e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0441\u043b\u0438\u044f\u043d\u0438\u0435 \u043d\u0430 \u043c\u0435\u0441\u0442\u0435 \u0441 \u043a\u043e\u043d\u0446\u0430 (Optimal In-place Merge from the End)","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u043b\u0438\u0432\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u0441 \u043a\u043e\u043d\u0446\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u0432 <code>nums1</code>, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0417\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043e\u043d\u0446\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0440\u0430\u0437\u043c\u0435\u0449\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u0438.</p> <pre><code>def merge(nums1, m, nums2, n):\n    p1, p2, end = m - 1, n - 1, m + n - 1\n\n    while p1 &gt;= 0 and p2 &gt;= 0:\n        if nums1[p1] &gt; nums2[p2]:\n            nums1[end] = nums1[p1]\n            p1 -= 1\n        else:\n            nums1[end] = nums2[p2]\n            p2 -= 1\n        end -= 1\n\n    while p2 &gt;= 0:\n        nums1[end] = nums2[p2]\n        p2 -= 1\n        end -= 1\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(m + n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430\u043c.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0411\u0435\u0437 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.</p>"},{"location":"Two_Pointers/#2-167-ii-","title":"2. 167. \u0414\u0432\u0435 \u0441\u0443\u043c\u043c\u044b II - \u0412\u0445\u043e\u0434\u043d\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d","text":""},{"location":"Two_Pointers/#_3","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u043e \u043d\u0435\u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>numbers</code> \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u0435\u0439 \u0441 1. \u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430, \u0441\u0443\u043c\u043c\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0440\u0430\u0432\u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 <code>target</code>. \u0412\u0435\u0440\u043d\u0438\u0442\u0435 \u0438\u0445 \u0438\u043d\u0434\u0435\u043a\u0441\u044b <code>[index1, index2]</code> (\u0441 1), \u0433\u0434\u0435 <code>index1 &lt; index2</code>. \u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u043d\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: numbers = [2,7,11,15], target = 9\n\u0412\u044b\u0445\u043e\u0434: [1,2]\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: 2 + 7 = 9, \u0438\u043d\u0434\u0435\u043a\u0441\u044b 0 \u0438 1 (\u0441 1: [1,2]).\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: numbers = [2,3,4], target = 6\n\u0412\u044b\u0445\u043e\u0434: [1,3]\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>2 &lt;= numbers.length &lt;= 3 * 10^4</code> - <code>-1000 &lt;= numbers[i] &lt;= 1000</code> - <code>-1000 &lt;= target &lt;= 1000</code> - \u041c\u0430\u0441\u0441\u0438\u0432 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u043e \u043d\u0435\u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e. - \u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u043d\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435.</p>"},{"location":"Two_Pointers/#_4","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Two_Pointers/#1-brute-force","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043f\u0430\u0440\u044b \u0447\u0438\u0441\u0435\u043b, \u0441\u0443\u043c\u043c\u0438\u0440\u0443\u044f \u0438\u0445 \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044f \u0441 <code>target</code>.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u0438\u0437-\u0437\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u043d\u043e\u0439 \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438.</p> <pre><code>def twoSum(numbers: List[int], target: int) -&gt; List[int]:\n    n = len(numbers)\n    for i in range(n):\n        for j in range(i + 1, n):\n            if numbers[i] + numbers[j] == target:\n                return [i + 1, j + 1]\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432\u0441\u0435\u0445 \u043f\u0430\u0440.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0411\u0435\u0437 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.</p>"},{"location":"Two_Pointers/#2-two-pointers","title":"2. \u0414\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f (Two Pointers)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043d\u0430\u0447\u0430\u043b\u0430 \u0438 \u043a\u043e\u043d\u0446\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u0438 \u0434\u0432\u0438\u0433\u0430\u0435\u043c \u0438\u0445 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0441\u0443\u043c\u043c\u044b.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u0438\u0441\u043a\u0430\u0442\u044c \u043f\u0430\u0440\u0443 \u0447\u0438\u0441\u0435\u043b.</p> <pre><code>def twoSum(numbers: List[int], target: int) -&gt; List[int]:\n    left, right = 0, len(numbers) - 1\n\n    while left &lt; right:\n        current_sum = numbers[left] + numbers[right]\n\n        if current_sum == target:\n            return [left + 1, right + 1]\n        elif current_sum &lt; target:\n            left += 1\n        else:\n            right -= 1\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0422\u043e\u043b\u044c\u043a\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438.</p>"},{"location":"Two_Pointers/#3-binary-search","title":"3. \u0411\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a (Binary Search)","text":"<p>\u0418\u0434\u0435\u044f: \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0438\u0449\u0435\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0434\u043e <code>target</code> \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0433\u043e \u043f\u043e\u0438\u0441\u043a\u0430.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u0434\u043b\u044f \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f.</p> <pre><code>def twoSum(numbers: List[int], target: int) -&gt; List[int]:\n    for i in range(len(numbers)):\n        complement = target - numbers[i]\n        left, right = i + 1, len(numbers) - 1\n\n        while left &lt;= right:\n            mid = (left + right) // 2\n            if numbers[mid] == complement:\n                return [i + 1, mid + 1]\n            elif numbers[mid] &lt; complement:\n                left = mid + 1\n            else:\n                right = mid - 1\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n * log n) - \u0411\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0411\u0435\u0437 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.</p>"},{"location":"Two_Pointers/#3-11","title":"3. 11. \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0441 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0432\u043e\u0434\u044b","text":""},{"location":"Two_Pointers/#_5","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 <code>height</code> \u0434\u043b\u0438\u043d\u043e\u0439 <code>n</code>, \u0433\u0434\u0435 <code>height[i]</code> \u2014 \u0432\u044b\u0441\u043e\u0442\u0430 \u043b\u0438\u043d\u0438\u0438 \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 <code>i</code>. \u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u0434\u0432\u0435 \u043b\u0438\u043d\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u043e\u0441\u044c\u044e X \u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0442 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0434\u044b. \u0412\u0435\u0440\u043d\u0438\u0442\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: height = [1,8,6,2,5,4,8,3,7]\n\u0412\u044b\u0445\u043e\u0434: 49\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u041b\u0438\u043d\u0438\u0438 \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044f\u0445 1 (\u0432\u044b\u0441\u043e\u0442\u0430 8) \u0438 8 (\u0432\u044b\u0441\u043e\u0442\u0430 7) \u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0442 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0441 \u043f\u043b\u043e\u0449\u0430\u0434\u044c\u044e min(8,7) * (8-1) = 49.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: height = [1,1]\n\u0412\u044b\u0445\u043e\u0434: 1\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>n == height.length</code> - <code>2 &lt;= n &lt;= 10^5</code> - <code>0 &lt;= height[i] &lt;= 10^4</code></p>"},{"location":"Two_Pointers/#_6","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Two_Pointers/#1-brute-force_1","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043f\u0430\u0440\u044b \u043b\u0438\u043d\u0438\u0439, \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u043d\u043e \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0438\u0437-\u0437\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u043d\u043e\u0439 \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438.</p> <pre><code>def maxArea(height):\n    max_area = 0\n    n = len(height)\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            area = min(height[i], height[j]) * (j - i)\n            max_area = max(max_area, area)\n\n    return max_area\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432\u0441\u0435\u0445 \u043f\u0430\u0440 \u043b\u0438\u043d\u0438\u0439.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0411\u0435\u0437 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u043c\u044f\u0442\u0438.</p>"},{"location":"Two_Pointers/#2-two-pointers_1","title":"2. \u0414\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f (Two Pointers)","text":"<p>\u0418\u0434\u0435\u044f: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043a\u0440\u0430\u0435\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u0438 \u0434\u0432\u0438\u0433\u0430\u0435\u043c \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0441 \u043c\u0435\u043d\u044c\u0448\u0435\u0439 \u0432\u044b\u0441\u043e\u0442\u043e\u0439, \u0447\u0442\u043e\u0431\u044b \u043c\u0430\u043a\u0441\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043b\u043e\u0449\u0430\u0434\u044c.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0414\u0432\u0438\u0436\u0435\u043d\u0438\u0435 \u043c\u0435\u043d\u044c\u0448\u0435\u0439 \u043b\u0438\u043d\u0438\u0438 \u043c\u043e\u0436\u0435\u0442 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u0437\u0430 \u0441\u0447\u0435\u0442 \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0432\u044b\u0441\u043e\u0442\u044b.</p> <pre><code>def maxArea(height):\n    left, right = 0, len(height) - 1\n    max_area = 0\n\n    while left &lt; right:\n        width = right - left\n        area = min(height[left], height[right]) * width\n        max_area = max(max_area, area)\n\n        if height[left] &lt; height[right]:\n            left += 1\n        else:\n            right -= 1\n\n    return max_area\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n) - \u041e\u0434\u0438\u043d \u043f\u0440\u043e\u0445\u043e\u0434 \u043f\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0443.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(1) - \u0422\u043e\u043b\u044c\u043a\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u0438.</p>"},{"location":"Two_Pointers/#4-15","title":"4. 15. \u0422\u0440\u0438 \u0441\u0443\u043c\u043c\u044b","text":""},{"location":"Two_Pointers/#_7","title":"\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438","text":"<p>\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b <code>nums</code>, \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u0432\u0441\u0435 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u043e\u0439\u043a\u0438 <code>[nums[i], nums[j], nums[k]]</code>, \u0442\u0430\u043a\u0438\u0435 \u0447\u0442\u043e <code>nums[i] + nums[j] + nums[k] == 0</code> \u0438 <code>i != j != k</code>. \u0412\u0435\u0440\u043d\u0438\u0442\u0435 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0442\u0430\u043a\u0438\u0445 \u0442\u0440\u043e\u0435\u043a.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440\u044b:</p> <pre><code>\u041f\u0440\u0438\u043c\u0435\u0440 1:\n\u0412\u0445\u043e\u0434: nums = [-1,0,1,2,-1,-4]\n\u0412\u044b\u0445\u043e\u0434: [[-1,-1,2],[-1,0,1]]\n\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435: \u0422\u0440\u043e\u0439\u043a\u0438, \u0441\u0443\u043c\u043c\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0440\u0430\u0432\u043d\u0430 0: [-1,0,1] \u0438 [-1,-1,2].\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2:\n\u0412\u0445\u043e\u0434: nums = []\n\u0412\u044b\u0445\u043e\u0434: []\n</code></pre> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: - <code>0 &lt;= nums.length &lt;= 3000</code> - <code>-10^5 &lt;= nums[i] &lt;= 10^5</code></p>"},{"location":"Two_Pointers/#_8","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u044f","text":""},{"location":"Two_Pointers/#1-brute-force_2","title":"1. \u041f\u043e\u043b\u043d\u044b\u0439 \u043f\u0435\u0440\u0435\u0431\u043e\u0440 (Brute Force)","text":"<p>\u0418\u0434\u0435\u044f: \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u0442\u0440\u043e\u0439\u043a\u0438 \u0447\u0438\u0441\u0435\u043b \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0442\u0435, \u0447\u044c\u044f \u0441\u0443\u043c\u043c\u0430 \u0440\u0430\u0432\u043d\u0430 0, \u0432 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0434\u043b\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u041f\u0440\u043e\u0441\u0442\u043e\u0439, \u043d\u043e \u043a\u0440\u0430\u0439\u043d\u0435 \u043d\u0435\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u043f\u043e\u0434\u0445\u043e\u0434 \u0438\u0437-\u0437\u0430 \u043a\u0443\u0431\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438.</p> <pre><code>def threeSum(nums):\n    nums.sort()\n    triplets = set()\n\n    for i in range(len(nums) - 2):\n        for j in range(i + 1, len(nums) - 1):\n            for k in range(j + 1, len(nums)):\n                if nums[i] + nums[j] + nums[k] == 0:\n                    triplet = (nums[i], nums[j], nums[k])\n                    triplets.add(triplet)\n\n    return list(triplets)\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b3) - \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0432\u0441\u0435\u0445 \u0442\u0440\u043e\u0435\u043a.</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(m) - m \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0442\u0440\u043e\u0435\u043a.</p>"},{"location":"Two_Pointers/#2-sorting-and-two-pointer-technique","title":"2. \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0438 \u0434\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f (Sorting and Two-Pointer Technique)","text":"<p>\u0418\u0434\u0435\u044f: \u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432, \u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u043c \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0434\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043e\u0441\u0442\u0430\u0432\u0448\u0435\u0439\u0441\u044f \u043f\u0430\u0440\u044b.</p> <p>\u0418\u043d\u0442\u0443\u0438\u0446\u0438\u044f: \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0434\u0443\u0431\u043b\u0438\u043a\u0430\u0442\u043e\u0432 \u0438 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u0438\u0441\u043a\u0430\u0442\u044c \u043f\u0430\u0440\u044b.</p> <pre><code>def threeSum(nums):\n    nums.sort()\n    triplets = []\n\n    for i in range(len(nums) - 2):\n        if i &gt; 0 and nums[i] == nums[i - 1]:\n            continue\n\n        left, right = i + 1, len(nums) - 1\n        while left &lt; right:\n            current_sum = nums[i] + nums[left] + nums[right]\n\n            if current_sum == 0:\n                triplets.append([nums[i], nums[left], nums[right]])\n                while left &lt; right and nums[left] == nums[left + 1]:\n                    left += 1\n                while left &lt; right and nums[right] == nums[right - 1]:\n                    right -= 1\n                left += 1\n                right -= 1\n            elif current_sum &lt; 0:\n                left += 1\n            else:\n                right -= 1\n\n    return triplets\n</code></pre> <p>\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(n\u00b2) - \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 O(n * log n) \u0438 \u0434\u0432\u0430 \u0443\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f O(n\u00b2).</p> <p>\u041f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c: O(m) - m \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0442\u0440\u043e\u0435\u043a.</p>"}]}